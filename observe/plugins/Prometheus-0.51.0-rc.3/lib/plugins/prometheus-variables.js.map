{"version":3,"sources":["../../../src/plugins/prometheus-variables.tsx"],"sourcesContent":["// Copyright 2024 The Perses Authors\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { FormControl, InputLabel, Stack, TextField } from '@mui/material';\nimport {\n  DatasourceSelect,\n  DatasourceSelectProps,\n  OptionsEditorProps,\n  useDatasourceClient,\n  VariableOption,\n} from '@perses-dev/plugin-system';\nimport { produce } from 'immer';\nimport { ReactElement } from 'react';\nimport { PromQLEditor } from '../components';\nimport {\n  DEFAULT_PROM,\n  isDefaultPromSelector,\n  isPrometheusDatasourceSelector,\n  MatrixData,\n  PROM_DATASOURCE_KIND,\n  PrometheusClient,\n  VectorData,\n} from '../model';\nimport { MatcherEditor } from './MatcherEditor';\nimport {\n  PrometheusLabelNamesVariableOptions,\n  PrometheusLabelValuesVariableOptions,\n  PrometheusPromQLVariableOptions,\n} from './types';\n\nexport function PrometheusLabelValuesVariableEditor(\n  props: OptionsEditorProps<PrometheusLabelValuesVariableOptions>\n): ReactElement {\n  const { onChange, value } = props;\n  const { datasource } = value;\n  const selectedDatasource = datasource ?? DEFAULT_PROM;\n\n  const handleDatasourceChange: DatasourceSelectProps['onChange'] = (next) => {\n    if (isPrometheusDatasourceSelector(next)) {\n      onChange(\n        produce(value, (draft) => {\n          // If they're using the default, just omit the datasource prop (i.e. set to undefined)\n          draft.datasource = isDefaultPromSelector(next) ? undefined : next;\n        })\n      );\n      return;\n    }\n\n    throw new Error('Got unexpected non-Prometheus datasource selector');\n  };\n\n  return (\n    <Stack spacing={2}>\n      <FormControl margin=\"dense\">\n        <InputLabel id=\"prom-datasource-label\">Prometheus Datasource</InputLabel>\n        <DatasourceSelect\n          datasourcePluginKind=\"PrometheusDatasource\"\n          value={selectedDatasource}\n          onChange={handleDatasourceChange}\n          readOnly={props.isReadonly}\n          labelId=\"prom-datasource-label\"\n          label=\"Prometheus Datasource\"\n        />\n      </FormControl>\n      <TextField\n        label=\"Label Name\"\n        required\n        value={props.value.labelName}\n        onChange={(e) => {\n          props.onChange({ ...props.value, labelName: e.target.value });\n        }}\n        InputProps={{\n          readOnly: props.isReadonly,\n        }}\n      />\n      <MatcherEditor\n        matchers={props.value.matchers ?? []}\n        onChange={(e) => {\n          props.onChange({ ...props.value, matchers: e });\n        }}\n        isReadonly={props.isReadonly}\n      />\n    </Stack>\n  );\n}\n\nexport function PrometheusLabelNamesVariableEditor(\n  props: OptionsEditorProps<PrometheusLabelNamesVariableOptions>\n): ReactElement {\n  const { onChange, value } = props;\n  const { datasource } = value;\n  const selectedDatasource = datasource ?? DEFAULT_PROM;\n\n  const handleDatasourceChange: DatasourceSelectProps['onChange'] = (next) => {\n    if (isPrometheusDatasourceSelector(next)) {\n      onChange(\n        produce(value, (draft) => {\n          // If they're using the default, just omit the datasource prop (i.e. set to undefined)\n          draft.datasource = isDefaultPromSelector(next) ? undefined : next;\n        })\n      );\n      return;\n    }\n\n    throw new Error('Got unexpected non-Prometheus datasource selector');\n  };\n\n  return (\n    <Stack spacing={2}>\n      <FormControl margin=\"dense\">\n        <InputLabel id=\"prom-datasource-label\">Prometheus Datasource</InputLabel>\n        <DatasourceSelect\n          datasourcePluginKind=\"PrometheusDatasource\"\n          value={selectedDatasource}\n          onChange={handleDatasourceChange}\n          disabled={props.isReadonly}\n          labelId=\"prom-datasource-label\"\n          label=\"Prometheus Datasource\"\n        />\n      </FormControl>\n      <MatcherEditor\n        matchers={props.value.matchers ?? []}\n        isReadonly={props.isReadonly}\n        onChange={(e) => {\n          props.onChange({ ...props.value, matchers: e });\n        }}\n      />\n    </Stack>\n  );\n}\n\nexport function PrometheusPromQLVariableEditor(\n  props: OptionsEditorProps<PrometheusPromQLVariableOptions>\n): ReactElement {\n  const { onChange, value } = props;\n  const { datasource } = value;\n  const selectedDatasource = datasource ?? DEFAULT_PROM;\n\n  const { data: client } = useDatasourceClient<PrometheusClient>(selectedDatasource);\n  const promURL = client?.options.datasourceUrl;\n\n  const handleDatasourceChange: DatasourceSelectProps['onChange'] = (next) => {\n    if (isPrometheusDatasourceSelector(next)) {\n      onChange(\n        produce(value, (draft) => {\n          // If they're using the default, just omit the datasource prop (i.e. set to undefined)\n          draft.datasource = isDefaultPromSelector(next) ? undefined : next;\n        })\n      );\n      return;\n    }\n\n    throw new Error('Got unexpected non-Prometheus datasource selector');\n  };\n\n  return (\n    <Stack spacing={2}>\n      <FormControl margin=\"dense\">\n        <InputLabel id=\"prom-datasource-label\">Prometheus Datasource</InputLabel>\n        <DatasourceSelect\n          datasourcePluginKind={PROM_DATASOURCE_KIND}\n          value={selectedDatasource}\n          onChange={handleDatasourceChange}\n          labelId=\"prom-datasource-label\"\n          label=\"Prometheus Datasource\"\n          disabled={props.isReadonly}\n        />\n      </FormControl>\n      <PromQLEditor\n        completeConfig={{ remote: { url: promURL } }}\n        value={value.expr}\n        datasource={selectedDatasource}\n        onBlur={(event) => {\n          props.onChange({ ...props.value, expr: event.target.textContent ?? '' });\n        }}\n        readOnly={props.isReadonly}\n        width=\"100%\"\n      />\n      <TextField\n        label=\"Label Name\"\n        value={props.value.labelName}\n        InputProps={{\n          readOnly: props.isReadonly,\n        }}\n        onChange={(e) => {\n          props.onChange({ ...props.value, labelName: e.target.value });\n        }}\n      />\n    </Stack>\n  );\n}\n\nexport function capturingMatrix(matrix: MatrixData, labelName: string): string[] {\n  const captured = new Set<string>();\n  for (const sample of matrix.result) {\n    const value = sample.metric[labelName];\n    if (value !== undefined) {\n      captured.add(value);\n    }\n  }\n  return Array.from(captured.values());\n}\n\nexport function capturingVector(vector: VectorData, labelName: string): string[] {\n  const captured = new Set<string>();\n  for (const sample of vector.result) {\n    const value = sample.metric[labelName];\n    if (value !== undefined) {\n      captured.add(value);\n    }\n  }\n  return Array.from(captured.values());\n}\n\n/**\n * Takes a list of strings and returns a list of VariableOptions\n */\nexport const stringArrayToVariableOptions = (values?: string[]): VariableOption[] => {\n  if (!values) return [];\n  return values.map((value) => ({\n    value,\n    label: value,\n  }));\n};\n"],"names":["FormControl","InputLabel","Stack","TextField","DatasourceSelect","useDatasourceClient","produce","PromQLEditor","DEFAULT_PROM","isDefaultPromSelector","isPrometheusDatasourceSelector","PROM_DATASOURCE_KIND","MatcherEditor","PrometheusLabelValuesVariableEditor","props","onChange","value","datasource","selectedDatasource","handleDatasourceChange","next","draft","undefined","Error","spacing","margin","id","datasourcePluginKind","readOnly","isReadonly","labelId","label","required","labelName","e","target","InputProps","matchers","PrometheusLabelNamesVariableEditor","disabled","PrometheusPromQLVariableEditor","data","client","promURL","options","datasourceUrl","completeConfig","remote","url","expr","onBlur","event","textContent","width","capturingMatrix","matrix","captured","Set","sample","result","metric","add","Array","from","values","capturingVector","vector","stringArrayToVariableOptions","map"],"mappings":"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"}