{"version":3,"sources":["../../../../src/plugins/prometheus-time-series-query/PrometheusTimeSeriesQueryEditor.tsx"],"sourcesContent":["// Copyright 2023 The Perses Authors\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { produce } from 'immer';\nimport {\n  DatasourceSelect,\n  DatasourceSelectProps,\n  useDatasource,\n  useDatasourceClient,\n  useDatasourceSelectValueToSelector,\n} from '@perses-dev/plugin-system';\nimport { useId } from '@perses-dev/components';\nimport { FormControl, InputLabel, Stack, TextField } from '@mui/material';\nimport { ReactElement } from 'react';\nimport {\n  DEFAULT_PROM,\n  DurationString,\n  isDefaultPromSelector,\n  isPrometheusDatasourceSelector,\n  PROM_DATASOURCE_KIND,\n  PrometheusClient,\n  PrometheusDatasourceSelector,\n} from '../../model';\nimport { DEFAULT_SCRAPE_INTERVAL, PrometheusDatasourceSpec } from '../types';\nimport { PromQLEditor } from '../../components';\nimport {\n  PrometheusTimeSeriesQueryEditorProps,\n  useQueryState,\n  useFormatState,\n  useMinStepState,\n} from './query-editor-model';\n\n/**\n * The options editor component for editing a PrometheusTimeSeriesQuery's spec.\n */\nexport function PrometheusTimeSeriesQueryEditor(props: PrometheusTimeSeriesQueryEditorProps): ReactElement {\n  const { onChange, value } = props;\n  const { datasource } = value;\n  const datasourceSelectValue = datasource ?? DEFAULT_PROM;\n\n  const datasourceSelectLabelID = useId('prom-datasource-label'); // for panels with multiple queries, this component is rendered multiple times on the same page\n\n  const selectedDatasource = useDatasourceSelectValueToSelector(\n    datasourceSelectValue,\n    PROM_DATASOURCE_KIND\n  ) as PrometheusDatasourceSelector;\n\n  const { data: client } = useDatasourceClient<PrometheusClient>(selectedDatasource);\n  const promURL = client?.options.datasourceUrl;\n  const { data: datasourceResource } = useDatasource(selectedDatasource);\n\n  const { handleQueryChange, handleQueryBlur } = useQueryState(props);\n  const { format, handleFormatChange, handleFormatBlur } = useFormatState(props);\n  const { minStep, handleMinStepChange, handleMinStepBlur } = useMinStepState(props);\n  const minStepPlaceholder =\n    minStep ??\n    (datasourceResource && (datasourceResource?.plugin.spec as PrometheusDatasourceSpec).scrapeInterval) ??\n    DEFAULT_SCRAPE_INTERVAL;\n\n  const handleDatasourceChange: DatasourceSelectProps['onChange'] = (next) => {\n    if (isPrometheusDatasourceSelector(next)) {\n      onChange(\n        produce(value, (draft) => {\n          // If they're using the default, just omit the datasource prop (i.e. set to undefined)\n          const nextDatasource = isDefaultPromSelector(next) ? undefined : next;\n          draft.datasource = nextDatasource;\n        })\n      );\n      return;\n    }\n\n    throw new Error('Got unexpected non-Prometheus datasource selector');\n  };\n\n  return (\n    <Stack spacing={2}>\n      <FormControl margin=\"dense\" fullWidth={false}>\n        <InputLabel id={datasourceSelectLabelID} shrink>\n          Prometheus Datasource\n        </InputLabel>\n        <DatasourceSelect\n          datasourcePluginKind={PROM_DATASOURCE_KIND}\n          value={datasourceSelectValue}\n          onChange={handleDatasourceChange}\n          labelId={datasourceSelectLabelID}\n          label=\"Prometheus Datasource\"\n          notched\n        />\n      </FormControl>\n      <PromQLEditor\n        completeConfig={{ remote: { url: promURL } }}\n        value={value.query} // here we are passing `value.query` and not `query` from useQueryState in order to get updates only on onBlur events\n        datasource={selectedDatasource}\n        onChange={handleQueryChange}\n        onBlur={handleQueryBlur}\n      />\n      <Stack direction=\"row\" spacing={2}>\n        <TextField\n          fullWidth\n          label=\"Legend\"\n          placeholder=\"Example: '{{instance}}' will generate series names like 'webserver-123', 'webserver-456'...\"\n          helperText=\"Text to be displayed in the legend and the tooltip. Use {{label_name}} to interpolate label values.\"\n          value={format ?? ''}\n          onChange={(e) => handleFormatChange(e.target.value)}\n          onBlur={handleFormatBlur}\n        />\n        <TextField\n          label=\"Min Step\"\n          placeholder={minStepPlaceholder}\n          helperText=\"Lower bound for the step. If not provided, the scrape interval of the datasource is used.\"\n          value={minStep}\n          onChange={(e) => handleMinStepChange(e.target.value as DurationString)}\n          onBlur={handleMinStepBlur}\n          sx={{ width: '250px' }}\n        />\n      </Stack>\n    </Stack>\n  );\n}\n"],"names":["produce","DatasourceSelect","useDatasource","useDatasourceClient","useDatasourceSelectValueToSelector","useId","FormControl","InputLabel","Stack","TextField","DEFAULT_PROM","isDefaultPromSelector","isPrometheusDatasourceSelector","PROM_DATASOURCE_KIND","DEFAULT_SCRAPE_INTERVAL","PromQLEditor","useQueryState","useFormatState","useMinStepState","PrometheusTimeSeriesQueryEditor","props","onChange","value","datasource","datasourceSelectValue","datasourceSelectLabelID","selectedDatasource","data","client","promURL","options","datasourceUrl","datasourceResource","handleQueryChange","handleQueryBlur","format","handleFormatChange","handleFormatBlur","minStep","handleMinStepChange","handleMinStepBlur","minStepPlaceholder","plugin","spec","scrapeInterval","handleDatasourceChange","next","draft","nextDatasource","undefined","Error","spacing","margin","fullWidth","id","shrink","datasourcePluginKind","labelId","label","notched","completeConfig","remote","url","query","onBlur","direction","placeholder","helperText","e","target","sx","width"],"mappings":"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"}