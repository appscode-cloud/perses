{"version":3,"sources":["../../../src/plugins/prometheus-datasource.tsx"],"sourcesContent":["// Copyright 2023 The Perses Authors\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { BuiltinVariableDefinition } from '@perses-dev/core';\nimport { DatasourcePlugin } from '@perses-dev/plugin-system';\nimport {\n  healthCheck,\n  instantQuery,\n  rangeQuery,\n  labelNames,\n  labelValues,\n  PrometheusClient,\n  metricMetadata,\n  series,\n  parseQuery,\n} from '../model';\nimport { PrometheusDatasourceSpec } from './types';\nimport { PrometheusDatasourceEditor } from './PrometheusDatasourceEditor';\n\n/**\n * Creates a PrometheusClient for a specific datasource spec.\n */\nconst createClient: DatasourcePlugin<PrometheusDatasourceSpec, PrometheusClient>['createClient'] = (spec, options) => {\n  const { directUrl, proxy } = spec;\n  const { proxyUrl } = options;\n\n  // Use the direct URL if specified, but fallback to the proxyUrl by default if not specified\n  const datasourceUrl = directUrl ?? proxyUrl;\n  if (datasourceUrl === undefined) {\n    throw new Error('No URL specified for Prometheus client. You can use directUrl in the spec to configure it.');\n  }\n\n  const specHeaders = proxy?.spec.headers;\n\n  // Could think about this becoming a class, although it definitely doesn't have to be\n  return {\n    options: {\n      datasourceUrl,\n    },\n    healthCheck: healthCheck({ datasourceUrl, headers: specHeaders }),\n    instantQuery: (params, headers) => instantQuery(params, { datasourceUrl, headers: headers ?? specHeaders }),\n    rangeQuery: (params, headers) => rangeQuery(params, { datasourceUrl, headers: headers ?? specHeaders }),\n    labelNames: (params, headers) => labelNames(params, { datasourceUrl, headers: headers ?? specHeaders }),\n    labelValues: (params, headers) => labelValues(params, { datasourceUrl, headers: headers ?? specHeaders }),\n    metricMetadata: (params, headers) => metricMetadata(params, { datasourceUrl, headers: headers ?? specHeaders }),\n    series: (params, headers) => series(params, { datasourceUrl, headers: headers ?? specHeaders }),\n    parseQuery: (params, headers) => parseQuery(params, { datasourceUrl, headers: headers ?? specHeaders }),\n  };\n};\n\nconst getBuiltinVariableDefinitions: () => BuiltinVariableDefinition[] = () => {\n  return [\n    {\n      kind: 'BuiltinVariable',\n      spec: {\n        name: '__interval',\n        value: () => '$__interval', // will be overriden when time series query is called\n        source: 'Prometheus',\n        display: {\n          name: '__interval',\n          description:\n            'For dynamic queries that adapt across different time ranges, use $__interval instead of hardcoded intervals. It represents the actual spacing between data points: itâ€™s calculated based on the current time range and the panel pixel width (taking the \"Min step\" as a lower bound).',\n          hidden: true,\n        },\n      },\n    },\n    {\n      kind: 'BuiltinVariable',\n      spec: {\n        name: '__interval_ms',\n        value: () => '$__interval_ms', // will be overriden when time series query is called\n        source: 'Prometheus',\n        display: {\n          name: '__interval_ms',\n          description: 'Same as $__interval but in milliseconds.',\n          hidden: true,\n        },\n      },\n    },\n    {\n      kind: 'BuiltinVariable',\n      spec: {\n        name: '__rate_interval',\n        value: () => '$__rate_interval', // will be overriden when time series query is called\n        source: 'Prometheus',\n        display: {\n          name: '__rate_interval',\n          description:\n            'Use this one rather than $__interval as the range parameter of functions like rate, increase, etc. With such function it is advised to choose a range that is at least 4x the scrape interval (this is to allow for various races, and to be resilient to a failed scrape). $__rate_interval provides that, as it is defined as `max($__interval + Min Step, 4 * Min Step)`, where Min Step value should represent the scrape interval of the metrics.',\n          hidden: true,\n        },\n      },\n    },\n  ] as BuiltinVariableDefinition[];\n};\n\nexport const PrometheusDatasource: DatasourcePlugin<PrometheusDatasourceSpec, PrometheusClient> = {\n  createClient,\n  getBuiltinVariableDefinitions,\n  OptionsEditorComponent: PrometheusDatasourceEditor,\n  createInitialOptions: () => ({ directUrl: '' }),\n};\n"],"names":["healthCheck","instantQuery","rangeQuery","labelNames","labelValues","metricMetadata","series","parseQuery","PrometheusDatasourceEditor","createClient","spec","options","directUrl","proxy","proxyUrl","datasourceUrl","undefined","Error","specHeaders","headers","params","getBuiltinVariableDefinitions","kind","name","value","source","display","description","hidden","PrometheusDatasource","OptionsEditorComponent","createInitialOptions"],"mappings":"AAAA,oCAAoC;AACpC,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,6CAA6C;AAC7C,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AAIjC,SACEA,WAAW,EACXC,YAAY,EACZC,UAAU,EACVC,UAAU,EACVC,WAAW,EAEXC,cAAc,EACdC,MAAM,EACNC,UAAU,QACL,WAAW;AAElB,SAASC,0BAA0B,QAAQ,+BAA+B;AAE1E;;CAEC,GACD,MAAMC,eAA6F,CAACC,MAAMC;IACxG,MAAM,EAAEC,SAAS,EAAEC,KAAK,EAAE,GAAGH;IAC7B,MAAM,EAAEI,QAAQ,EAAE,GAAGH;IAErB,4FAA4F;IAC5F,MAAMI,gBAAgBH,aAAaE;IACnC,IAAIC,kBAAkBC,WAAW;QAC/B,MAAM,IAAIC,MAAM;IAClB;IAEA,MAAMC,cAAcL,OAAOH,KAAKS;IAEhC,qFAAqF;IACrF,OAAO;QACLR,SAAS;YACPI;QACF;QACAf,aAAaA,YAAY;YAAEe;YAAeI,SAASD;QAAY;QAC/DjB,cAAc,CAACmB,QAAQD,UAAYlB,aAAamB,QAAQ;gBAAEL;gBAAeI,SAASA,WAAWD;YAAY;QACzGhB,YAAY,CAACkB,QAAQD,UAAYjB,WAAWkB,QAAQ;gBAAEL;gBAAeI,SAASA,WAAWD;YAAY;QACrGf,YAAY,CAACiB,QAAQD,UAAYhB,WAAWiB,QAAQ;gBAAEL;gBAAeI,SAASA,WAAWD;YAAY;QACrGd,aAAa,CAACgB,QAAQD,UAAYf,YAAYgB,QAAQ;gBAAEL;gBAAeI,SAASA,WAAWD;YAAY;QACvGb,gBAAgB,CAACe,QAAQD,UAAYd,eAAee,QAAQ;gBAAEL;gBAAeI,SAASA,WAAWD;YAAY;QAC7GZ,QAAQ,CAACc,QAAQD,UAAYb,OAAOc,QAAQ;gBAAEL;gBAAeI,SAASA,WAAWD;YAAY;QAC7FX,YAAY,CAACa,QAAQD,UAAYZ,WAAWa,QAAQ;gBAAEL;gBAAeI,SAASA,WAAWD;YAAY;IACvG;AACF;AAEA,MAAMG,gCAAmE;IACvE,OAAO;QACL;YACEC,MAAM;YACNZ,MAAM;gBACJa,MAAM;gBACNC,OAAO,IAAM;gBACbC,QAAQ;gBACRC,SAAS;oBACPH,MAAM;oBACNI,aACE;oBACFC,QAAQ;gBACV;YACF;QACF;QACA;YACEN,MAAM;YACNZ,MAAM;gBACJa,MAAM;gBACNC,OAAO,IAAM;gBACbC,QAAQ;gBACRC,SAAS;oBACPH,MAAM;oBACNI,aAAa;oBACbC,QAAQ;gBACV;YACF;QACF;QACA;YACEN,MAAM;YACNZ,MAAM;gBACJa,MAAM;gBACNC,OAAO,IAAM;gBACbC,QAAQ;gBACRC,SAAS;oBACPH,MAAM;oBACNI,aACE;oBACFC,QAAQ;gBACV;YACF;QACF;KACD;AACH;AAEA,OAAO,MAAMC,uBAAqF;IAChGpB;IACAY;IACAS,wBAAwBtB;IACxBuB,sBAAsB,IAAO,CAAA;YAAEnB,WAAW;QAAG,CAAA;AAC/C,EAAE"}