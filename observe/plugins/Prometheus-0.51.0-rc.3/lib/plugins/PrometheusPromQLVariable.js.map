{"version":3,"sources":["../../../src/plugins/PrometheusPromQLVariable.tsx"],"sourcesContent":["import { VariablePlugin, GetVariableOptionsContext, replaceVariables, parseVariables } from '@perses-dev/plugin-system';\nimport { PrometheusClient, DEFAULT_PROM } from '../model';\nimport {\n  capturingMatrix,\n  capturingVector,\n  stringArrayToVariableOptions,\n  PrometheusPromQLVariableEditor,\n} from './prometheus-variables';\nimport { PrometheusPromQLVariableOptions } from './types';\n\nexport const PrometheusPromQLVariable: VariablePlugin<PrometheusPromQLVariableOptions> = {\n  getVariableOptions: async (spec: PrometheusPromQLVariableOptions, ctx: GetVariableOptionsContext) => {\n    const client: PrometheusClient = await ctx.datasourceStore.getDatasourceClient(spec.datasource ?? DEFAULT_PROM);\n    // TODO we may want to manage a range query as well.\n    const { data: options } = await client.instantQuery({\n      query: replaceVariables(spec.expr, ctx.variables),\n    });\n    const labelName = replaceVariables(spec.labelName, ctx.variables);\n    let values: string[] = [];\n    if (options?.resultType === 'matrix') {\n      values = capturingMatrix(options, labelName);\n    } else if (options?.resultType === 'vector') {\n      values = capturingVector(options, labelName);\n    }\n\n    return {\n      data: stringArrayToVariableOptions(values),\n    };\n  },\n  dependsOn: (spec: PrometheusPromQLVariableOptions) => {\n    return { variables: parseVariables(spec.expr).concat(parseVariables(spec.labelName)) };\n  },\n  OptionsEditorComponent: PrometheusPromQLVariableEditor,\n  createInitialOptions: () => ({ expr: '', labelName: '' }),\n};\n"],"names":["replaceVariables","parseVariables","DEFAULT_PROM","capturingMatrix","capturingVector","stringArrayToVariableOptions","PrometheusPromQLVariableEditor","PrometheusPromQLVariable","getVariableOptions","spec","ctx","client","datasourceStore","getDatasourceClient","datasource","data","options","instantQuery","query","expr","variables","labelName","values","resultType","dependsOn","concat","OptionsEditorComponent","createInitialOptions"],"mappings":"AAAA,SAAoDA,gBAAgB,EAAEC,cAAc,QAAQ,4BAA4B;AACxH,SAA2BC,YAAY,QAAQ,WAAW;AAC1D,SACEC,eAAe,EACfC,eAAe,EACfC,4BAA4B,EAC5BC,8BAA8B,QACzB,yBAAyB;AAGhC,OAAO,MAAMC,2BAA4E;IACvFC,oBAAoB,OAAOC,MAAuCC;QAChE,MAAMC,SAA2B,MAAMD,IAAIE,eAAe,CAACC,mBAAmB,CAACJ,KAAKK,UAAU,IAAIZ;QAClG,oDAAoD;QACpD,MAAM,EAAEa,MAAMC,OAAO,EAAE,GAAG,MAAML,OAAOM,YAAY,CAAC;YAClDC,OAAOlB,iBAAiBS,KAAKU,IAAI,EAAET,IAAIU,SAAS;QAClD;QACA,MAAMC,YAAYrB,iBAAiBS,KAAKY,SAAS,EAAEX,IAAIU,SAAS;QAChE,IAAIE,SAAmB,EAAE;QACzB,IAAIN,SAASO,eAAe,UAAU;YACpCD,SAASnB,gBAAgBa,SAASK;QACpC,OAAO,IAAIL,SAASO,eAAe,UAAU;YAC3CD,SAASlB,gBAAgBY,SAASK;QACpC;QAEA,OAAO;YACLN,MAAMV,6BAA6BiB;QACrC;IACF;IACAE,WAAW,CAACf;QACV,OAAO;YAAEW,WAAWnB,eAAeQ,KAAKU,IAAI,EAAEM,MAAM,CAACxB,eAAeQ,KAAKY,SAAS;QAAG;IACvF;IACAK,wBAAwBpB;IACxBqB,sBAAsB,IAAO,CAAA;YAAER,MAAM;YAAIE,WAAW;QAAG,CAAA;AACzD,EAAE"}