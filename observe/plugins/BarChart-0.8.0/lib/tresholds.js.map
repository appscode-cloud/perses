{"version":3,"sources":["../../src/tresholds.ts"],"sourcesContent":["import { StepOptions, ThresholdColorPalette, ThresholdOptions, FormatOptions } from '@perses-dev/core';\nimport zip from 'lodash/zip';\n\nexport type GaugeColorStop = [number, string];\n\nexport type EChartsAxisLineColors = GaugeColorStop[];\n\nexport const defaultThresholdInput: ThresholdOptions = { steps: [{ value: 0 }] };\n\nexport function convertThresholds(\n  thresholds: ThresholdOptions,\n  unit: FormatOptions,\n  max: number,\n  palette: ThresholdColorPalette\n): EChartsAxisLineColors {\n  const defaultThresholdColor = thresholds.defaultColor ?? palette.defaultColor;\n  const defaultThresholdSteps: EChartsAxisLineColors = [[0, defaultThresholdColor]];\n\n  if (thresholds.steps !== undefined) {\n    // https://echarts.apache.org/en/option.html#series-gauge.axisLine.lineStyle.color\n    // color segments must be decimal between 0 and 1\n    const segmentMax = 1;\n    const valuesArr: number[] = thresholds.steps.map((step: StepOptions) => {\n      if (thresholds.mode === 'percent') {\n        return step.value / 100;\n      }\n      return step.value / max;\n    });\n    valuesArr.push(segmentMax);\n\n    const colorsArr = thresholds.steps.map((step: StepOptions, index) => step.color ?? palette.palette[index]);\n    colorsArr.unshift(defaultThresholdColor);\n\n    const zippedArr = zip(valuesArr, colorsArr);\n    return zippedArr.map((elem) => {\n      const convertedValues = elem[0] ?? segmentMax;\n      const convertedColors = elem[1] ?? defaultThresholdColor;\n      return [convertedValues, convertedColors];\n    });\n  } else {\n    return defaultThresholdSteps;\n  }\n}\n"],"names":["zip","defaultThresholdInput","steps","value","convertThresholds","thresholds","unit","max","palette","defaultThresholdColor","defaultColor","defaultThresholdSteps","undefined","segmentMax","valuesArr","map","step","mode","push","colorsArr","index","color","unshift","zippedArr","elem","convertedValues","convertedColors"],"mappings":"AACA,OAAOA,SAAS,aAAa;AAM7B,OAAO,MAAMC,wBAA0C;IAAEC,OAAO;QAAC;YAAEC,OAAO;QAAE;KAAE;AAAC,EAAE;AAEjF,OAAO,SAASC,kBACdC,UAA4B,EAC5BC,IAAmB,EACnBC,GAAW,EACXC,OAA8B;IAE9B,MAAMC,wBAAwBJ,WAAWK,YAAY,IAAIF,QAAQE,YAAY;IAC7E,MAAMC,wBAA+C;QAAC;YAAC;YAAGF;SAAsB;KAAC;IAEjF,IAAIJ,WAAWH,KAAK,KAAKU,WAAW;QAClC,kFAAkF;QAClF,iDAAiD;QACjD,MAAMC,aAAa;QACnB,MAAMC,YAAsBT,WAAWH,KAAK,CAACa,GAAG,CAAC,CAACC;YAChD,IAAIX,WAAWY,IAAI,KAAK,WAAW;gBACjC,OAAOD,KAAKb,KAAK,GAAG;YACtB;YACA,OAAOa,KAAKb,KAAK,GAAGI;QACtB;QACAO,UAAUI,IAAI,CAACL;QAEf,MAAMM,YAAYd,WAAWH,KAAK,CAACa,GAAG,CAAC,CAACC,MAAmBI,QAAUJ,KAAKK,KAAK,IAAIb,QAAQA,OAAO,CAACY,MAAM;QACzGD,UAAUG,OAAO,CAACb;QAElB,MAAMc,YAAYvB,IAAIc,WAAWK;QACjC,OAAOI,UAAUR,GAAG,CAAC,CAACS;YACpB,MAAMC,kBAAkBD,IAAI,CAAC,EAAE,IAAIX;YACnC,MAAMa,kBAAkBF,IAAI,CAAC,EAAE,IAAIf;YACnC,OAAO;gBAACgB;gBAAiBC;aAAgB;QAC3C;IACF,OAAO;QACL,OAAOf;IACT;AACF"}