{"version":3,"sources":["../../src/TableSettingsEditor.tsx"],"sourcesContent":["// Copyright 2024 The Perses Authors\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Switch, TextField } from '@mui/material';\nimport {\n  DEFAULT_COLUMN_HEIGHT,\n  DEFAULT_COLUMN_WIDTH,\n  DensitySelector,\n  OptionsEditorColumn,\n  OptionsEditorControl,\n  OptionsEditorGrid,\n  OptionsEditorGroup,\n  TableDensity,\n} from '@perses-dev/components';\nimport { ChangeEvent, ReactElement } from 'react';\nimport { TableSettingsEditorProps } from './table-model';\n\ninterface DefaultColumnsDimensionsControlProps {\n  label: string;\n  defaultValue: number;\n  value?: 'auto' | number;\n  onChange: (value: 'auto' | number) => void;\n}\n\nfunction DefaultColumnsDimensionsControl({\n  label,\n  defaultValue,\n  value,\n  onChange,\n}: DefaultColumnsDimensionsControlProps): ReactElement {\n  function handleAutoSwitchChange(_: ChangeEvent, checked: boolean): void {\n    if (checked) {\n      return onChange('auto');\n    }\n    onChange(defaultValue);\n  }\n\n  return (\n    <>\n      <OptionsEditorControl\n        label={`Auto Columns ${label}`}\n        control={<Switch checked={value === undefined || value === 'auto'} onChange={handleAutoSwitchChange} />}\n      />\n      {value !== undefined && value !== 'auto' && (\n        <OptionsEditorControl\n          label={`Default Columns ${label}`}\n          control={\n            <TextField\n              type=\"number\"\n              value={value ?? defaultValue}\n              InputProps={{ inputProps: { min: 1, step: 1 } }}\n              onChange={(e) => onChange(parseInt(e.target.value))}\n            />\n          }\n        />\n      )}\n    </>\n  );\n}\n\nexport function TableSettingsEditor({ onChange, value }: TableSettingsEditorProps): ReactElement {\n  function handleDensityChange(density: TableDensity): void {\n    onChange({ ...value, density: density });\n  }\n\n  function handlePaginationChange(_event: ChangeEvent, newValue: boolean): void {\n    onChange({ ...value, pagination: newValue });\n  }\n\n  function handleAutoWidthChange(newValue: 'auto' | number): void {\n    onChange({ ...value, defaultColumnWidth: newValue });\n  }\n\n  function handleAutoHeightChange(newValue: 'auto' | number): void {\n    onChange({ ...value, defaultColumnHeight: newValue });\n  }\n\n  return (\n    <OptionsEditorGrid>\n      <OptionsEditorColumn>\n        <OptionsEditorGroup title=\"Display\">\n          <DensitySelector value={value.density} onChange={handleDensityChange} />\n          <OptionsEditorControl\n            label=\"Pagination\"\n            control={<Switch checked={!!value.pagination} onChange={handlePaginationChange} />}\n          />\n          <DefaultColumnsDimensionsControl\n            label=\"Width\"\n            defaultValue={DEFAULT_COLUMN_WIDTH}\n            value={value.defaultColumnWidth}\n            onChange={handleAutoWidthChange}\n          />\n          <DefaultColumnsDimensionsControl\n            label=\"Height\"\n            defaultValue={DEFAULT_COLUMN_HEIGHT}\n            value={value.defaultColumnHeight}\n            onChange={handleAutoHeightChange}\n          />\n        </OptionsEditorGroup>\n      </OptionsEditorColumn>\n    </OptionsEditorGrid>\n  );\n}\n"],"names":["Switch","TextField","DEFAULT_COLUMN_HEIGHT","DEFAULT_COLUMN_WIDTH","DensitySelector","OptionsEditorColumn","OptionsEditorControl","OptionsEditorGrid","OptionsEditorGroup","DefaultColumnsDimensionsControl","label","defaultValue","value","onChange","handleAutoSwitchChange","_","checked","control","undefined","type","InputProps","inputProps","min","step","e","parseInt","target","TableSettingsEditor","handleDensityChange","density","handlePaginationChange","_event","newValue","pagination","handleAutoWidthChange","defaultColumnWidth","handleAutoHeightChange","defaultColumnHeight","title"],"mappings":"AAAA,oCAAoC;AACpC,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,6CAA6C;AAC7C,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEjC,SAASA,MAAM,EAAEC,SAAS,QAAQ,gBAAgB;AAClD,SACEC,qBAAqB,EACrBC,oBAAoB,EACpBC,eAAe,EACfC,mBAAmB,EACnBC,oBAAoB,EACpBC,iBAAiB,EACjBC,kBAAkB,QAEb,yBAAyB;AAWhC,SAASC,gCAAgC,EACvCC,KAAK,EACLC,YAAY,EACZC,KAAK,EACLC,QAAQ,EAC6B;IACrC,SAASC,uBAAuBC,CAAc,EAAEC,OAAgB;QAC9D,IAAIA,SAAS;YACX,OAAOH,SAAS;QAClB;QACAA,SAASF;IACX;IAEA,qBACE;;0BACE,KAACL;gBACCI,OAAO,CAAC,aAAa,EAAEA,OAAO;gBAC9BO,uBAAS,KAACjB;oBAAOgB,SAASJ,UAAUM,aAAaN,UAAU;oBAAQC,UAAUC;;;YAE9EF,UAAUM,aAAaN,UAAU,wBAChC,KAACN;gBACCI,OAAO,CAAC,gBAAgB,EAAEA,OAAO;gBACjCO,uBACE,KAAChB;oBACCkB,MAAK;oBACLP,OAAOA,SAASD;oBAChBS,YAAY;wBAAEC,YAAY;4BAAEC,KAAK;4BAAGC,MAAM;wBAAE;oBAAE;oBAC9CV,UAAU,CAACW,IAAMX,SAASY,SAASD,EAAEE,MAAM,CAACd,KAAK;;;;;AAO/D;AAEA,OAAO,SAASe,oBAAoB,EAAEd,QAAQ,EAAED,KAAK,EAA4B;IAC/E,SAASgB,oBAAoBC,OAAqB;QAChDhB,SAAS;YAAE,GAAGD,KAAK;YAAEiB,SAASA;QAAQ;IACxC;IAEA,SAASC,uBAAuBC,MAAmB,EAAEC,QAAiB;QACpEnB,SAAS;YAAE,GAAGD,KAAK;YAAEqB,YAAYD;QAAS;IAC5C;IAEA,SAASE,sBAAsBF,QAAyB;QACtDnB,SAAS;YAAE,GAAGD,KAAK;YAAEuB,oBAAoBH;QAAS;IACpD;IAEA,SAASI,uBAAuBJ,QAAyB;QACvDnB,SAAS;YAAE,GAAGD,KAAK;YAAEyB,qBAAqBL;QAAS;IACrD;IAEA,qBACE,KAACzB;kBACC,cAAA,KAACF;sBACC,cAAA,MAACG;gBAAmB8B,OAAM;;kCACxB,KAAClC;wBAAgBQ,OAAOA,MAAMiB,OAAO;wBAAEhB,UAAUe;;kCACjD,KAACtB;wBACCI,OAAM;wBACNO,uBAAS,KAACjB;4BAAOgB,SAAS,CAAC,CAACJ,MAAMqB,UAAU;4BAAEpB,UAAUiB;;;kCAE1D,KAACrB;wBACCC,OAAM;wBACNC,cAAcR;wBACdS,OAAOA,MAAMuB,kBAAkB;wBAC/BtB,UAAUqB;;kCAEZ,KAACzB;wBACCC,OAAM;wBACNC,cAAcT;wBACdU,OAAOA,MAAMyB,mBAAmB;wBAChCxB,UAAUuB;;;;;;AAMtB"}