{"version":3,"sources":["../../src/table-model.ts"],"sourcesContent":["// Copyright 2024 The Perses Authors\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Definition, FormatOptions, Transform, UnknownSpec } from '@perses-dev/core';\nimport { TableDensity } from '@perses-dev/components';\nimport { OptionsEditorProps } from '@perses-dev/plugin-system';\n\nexport interface ColumnSettings {\n  name: string;\n\n  // Text to display in the header for the column.\n  header?: string;\n  /**\n   * Text to display when hovering over the header text. This can be useful for\n   * providing additional information about the column when you want to keep the\n   * header text relatively short to manage the column width.\n   */\n  headerDescription?: string;\n  /**\n   * Text to display when hovering over a cell. This can be useful for\n   * providing additional information about the column when the content is\n   * ellipsized to fit in the space.\n   */\n  cellDescription?: string;\n\n  /**\n   * Panel plugin to render.\n   * By default, the cells are rendered as text.\n   */\n  plugin?: Definition<UnknownSpec>;\n\n  /** Formatting options. Only applicable if plugin is unset. */\n  format?: FormatOptions;\n\n  // Alignment of the content in the cell.\n  align?: 'left' | 'center' | 'right';\n\n  // When `true`, the column will be sortable.\n  enableSorting?: boolean;\n\n  // Default sort order for the column.\n  sort?: 'asc' | 'desc';\n\n  /**\n   * Width of the column when rendered in a table. It should be a number in pixels\n   * or \"auto\" to allow the table to automatically adjust the width to fill\n   * space.\n   */\n  width?: number | 'auto';\n  // When `true`, the column will not be displayed.\n  hide?: boolean;\n}\n\nexport interface ValueCondition {\n  kind: 'Value';\n  spec: {\n    value: string;\n  };\n}\n\nexport interface RangeCondition {\n  kind: 'Range';\n  spec: {\n    min?: number;\n    max?: number;\n  };\n}\n\nexport interface RegexCondition {\n  kind: 'Regex';\n  spec: {\n    expr: string;\n  };\n}\n\nexport interface MiscCondition {\n  kind: 'Misc';\n  spec: {\n    value: 'empty' | 'null' | 'NaN' | 'true' | 'false';\n  };\n}\n\nexport type Condition = ValueCondition | RangeCondition | RegexCondition | MiscCondition;\n\nexport interface CellSettings {\n  condition: Condition;\n  text?: string;\n  textColor?: `#${string}`;\n  backgroundColor?: `#${string}`;\n}\n\n/**\n * The schema for a Table panel.\n */\nexport interface TableDefinition extends Definition<TableOptions> {\n  kind: 'Table';\n}\n\n/**\n * The Options object type supported by the Table panel plugin.\n */\nexport interface TableOptions {\n  // Change row height.\n  density?: TableDensity;\n  // When set to 'auto', the table will try to automatically adjust the width of columns to fit without overflowing.\n  // Only for column without custom width specified in columnSettings.\n  defaultColumnWidth?: 'auto' | number;\n  // When set to 'auto', the table will calculate the cell height based on the line height of the theme and the density setting of the table.\n  // Only for column without custom height specified in columnSettings.\n  defaultColumnHeight?: 'auto' | number;\n  // Enable pagination.\n  pagination?: boolean;\n  // Customize column display and order them by their index in the array.\n  columnSettings?: ColumnSettings[];\n  // Customize cell display based on their value.\n  cellSettings?: CellSettings[];\n  // Apply transforms to the data before rendering the table.\n  transforms?: Transform[];\n}\n\n/**\n * Creates the initial/empty options for a Table panel.\n */\nexport function createInitialTableOptions(): TableOptions {\n  return {\n    density: 'standard',\n  };\n}\n\nexport type TableSettingsEditorProps = OptionsEditorProps<TableOptions>;\n"],"names":["createInitialTableOptions","density"],"mappings":"AAAA,oCAAoC;AACpC,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,6CAA6C;AAC7C,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AAuHjC;;CAEC,GACD,OAAO,SAASA;IACd,OAAO;QACLC,SAAS;IACX;AACF"}