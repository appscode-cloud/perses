{"version":3,"sources":["../../src/StatChartOptionsEditorSettings.tsx"],"sourcesContent":["// Copyright 2023 The Perses Authors\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Switch, SwitchProps } from '@mui/material';\nimport {\n  FontSizeOption,\n  FontSizeSelector,\n  FontSizeSelectorProps,\n  FormatControls,\n  FormatControlsProps,\n  OptionsEditorColumn,\n  OptionsEditorControl,\n  OptionsEditorGrid,\n  OptionsEditorGroup,\n  ThresholdsEditor,\n  ThresholdsEditorProps,\n} from '@perses-dev/components';\nimport { FormatOptions } from '@perses-dev/core';\nimport {\n  CalculationSelector,\n  CalculationSelectorProps,\n  MetricLabelInput,\n  MetricLabelInputProps,\n} from '@perses-dev/plugin-system';\nimport { produce } from 'immer';\nimport merge from 'lodash/merge';\nimport { ReactElement } from 'react';\nimport { StatChartOptions, StatChartOptionsEditorProps } from './stat-chart-model';\n\nconst DEFAULT_FORMAT: FormatOptions = { unit: 'percent-decimal' };\n\nexport function StatChartOptionsEditorSettings(props: StatChartOptionsEditorProps): ReactElement {\n  const { onChange, value } = props;\n\n  // ensures decimalPlaces defaults to correct value\n  const format = merge({}, DEFAULT_FORMAT, value.format);\n\n  const handleCalculationChange: CalculationSelectorProps['onChange'] = (metricLabel) => {\n    onChange(\n      produce(value, (draft: StatChartOptions) => {\n        draft.calculation = metricLabel;\n      })\n    );\n  };\n\n  const handleMetricLabelChange: MetricLabelInputProps['onChange'] = (newCalculation) => {\n    onChange(\n      produce(value, (draft: StatChartOptions) => {\n        draft.metricLabel = newCalculation;\n      })\n    );\n  };\n\n  const handleUnitChange: FormatControlsProps['onChange'] = (newFormat) => {\n    onChange(\n      produce(value, (draft: StatChartOptions) => {\n        draft.format = newFormat;\n      })\n    );\n  };\n\n  const handleSparklineChange: SwitchProps['onChange'] = (_: unknown, checked: boolean) => {\n    onChange(\n      produce(value, (draft: StatChartOptions) => {\n        // For now, setting to an empty object when checked, so the stat chart\n        // uses the default chart color and line styles. In the future, this\n        // will likely be configurable in the UI.\n        draft.sparkline = checked ? {} : undefined;\n      })\n    );\n  };\n\n  const handleThresholdsChange: ThresholdsEditorProps['onChange'] = (thresholds) => {\n    onChange(\n      produce(value, (draft: StatChartOptions) => {\n        draft.thresholds = thresholds;\n      })\n    );\n  };\n\n  const handleFontSizeChange: FontSizeSelectorProps['onChange'] = (fontSize: FontSizeOption) => {\n    onChange(\n      produce(value, (draft: StatChartOptions) => {\n        draft.valueFontSize = fontSize;\n      })\n    );\n  };\n\n  return (\n    <OptionsEditorGrid>\n      <OptionsEditorColumn>\n        <OptionsEditorGroup title=\"Misc\">\n          <OptionsEditorControl\n            label=\"Sparkline\"\n            control={<Switch checked={!!value.sparkline} onChange={handleSparklineChange} />}\n          />\n          <FormatControls value={format} onChange={handleUnitChange} />\n          <CalculationSelector value={value.calculation} onChange={handleCalculationChange} />\n          <MetricLabelInput value={value.metricLabel} onChange={handleMetricLabelChange} />\n          <FontSizeSelector value={value.valueFontSize} onChange={handleFontSizeChange} />\n        </OptionsEditorGroup>\n      </OptionsEditorColumn>\n      <OptionsEditorColumn>\n        <ThresholdsEditor disablePercentMode thresholds={value.thresholds} onChange={handleThresholdsChange} />\n      </OptionsEditorColumn>\n    </OptionsEditorGrid>\n  );\n}\n"],"names":["Switch","FontSizeSelector","FormatControls","OptionsEditorColumn","OptionsEditorControl","OptionsEditorGrid","OptionsEditorGroup","ThresholdsEditor","CalculationSelector","MetricLabelInput","produce","merge","DEFAULT_FORMAT","unit","StatChartOptionsEditorSettings","props","onChange","value","format","handleCalculationChange","metricLabel","draft","calculation","handleMetricLabelChange","newCalculation","handleUnitChange","newFormat","handleSparklineChange","_","checked","sparkline","undefined","handleThresholdsChange","thresholds","handleFontSizeChange","fontSize","valueFontSize","title","label","control","disablePercentMode"],"mappings":"AAAA,oCAAoC;AACpC,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,6CAA6C;AAC7C,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEjC,SAASA,MAAM,QAAqB,gBAAgB;AACpD,SAEEC,gBAAgB,EAEhBC,cAAc,EAEdC,mBAAmB,EACnBC,oBAAoB,EACpBC,iBAAiB,EACjBC,kBAAkB,EAClBC,gBAAgB,QAEX,yBAAyB;AAEhC,SACEC,mBAAmB,EAEnBC,gBAAgB,QAEX,4BAA4B;AACnC,SAASC,OAAO,QAAQ,QAAQ;AAChC,OAAOC,WAAW,eAAe;AAIjC,MAAMC,iBAAgC;IAAEC,MAAM;AAAkB;AAEhE,OAAO,SAASC,+BAA+BC,KAAkC;IAC/E,MAAM,EAAEC,QAAQ,EAAEC,KAAK,EAAE,GAAGF;IAE5B,kDAAkD;IAClD,MAAMG,SAASP,MAAM,CAAC,GAAGC,gBAAgBK,MAAMC,MAAM;IAErD,MAAMC,0BAAgE,CAACC;QACrEJ,SACEN,QAAQO,OAAO,CAACI;YACdA,MAAMC,WAAW,GAAGF;QACtB;IAEJ;IAEA,MAAMG,0BAA6D,CAACC;QAClER,SACEN,QAAQO,OAAO,CAACI;YACdA,MAAMD,WAAW,GAAGI;QACtB;IAEJ;IAEA,MAAMC,mBAAoD,CAACC;QACzDV,SACEN,QAAQO,OAAO,CAACI;YACdA,MAAMH,MAAM,GAAGQ;QACjB;IAEJ;IAEA,MAAMC,wBAAiD,CAACC,GAAYC;QAClEb,SACEN,QAAQO,OAAO,CAACI;YACd,sEAAsE;YACtE,oEAAoE;YACpE,yCAAyC;YACzCA,MAAMS,SAAS,GAAGD,UAAU,CAAC,IAAIE;QACnC;IAEJ;IAEA,MAAMC,yBAA4D,CAACC;QACjEjB,SACEN,QAAQO,OAAO,CAACI;YACdA,MAAMY,UAAU,GAAGA;QACrB;IAEJ;IAEA,MAAMC,uBAA0D,CAACC;QAC/DnB,SACEN,QAAQO,OAAO,CAACI;YACdA,MAAMe,aAAa,GAAGD;QACxB;IAEJ;IAEA,qBACE,MAAC9B;;0BACC,KAACF;0BACC,cAAA,MAACG;oBAAmB+B,OAAM;;sCACxB,KAACjC;4BACCkC,OAAM;4BACNC,uBAAS,KAACvC;gCAAO6B,SAAS,CAAC,CAACZ,MAAMa,SAAS;gCAAEd,UAAUW;;;sCAEzD,KAACzB;4BAAee,OAAOC;4BAAQF,UAAUS;;sCACzC,KAACjB;4BAAoBS,OAAOA,MAAMK,WAAW;4BAAEN,UAAUG;;sCACzD,KAACV;4BAAiBQ,OAAOA,MAAMG,WAAW;4BAAEJ,UAAUO;;sCACtD,KAACtB;4BAAiBgB,OAAOA,MAAMmB,aAAa;4BAAEpB,UAAUkB;;;;;0BAG5D,KAAC/B;0BACC,cAAA,KAACI;oBAAiBiC,kBAAkB;oBAACP,YAAYhB,MAAMgB,UAAU;oBAAEjB,UAAUgB;;;;;AAIrF"}