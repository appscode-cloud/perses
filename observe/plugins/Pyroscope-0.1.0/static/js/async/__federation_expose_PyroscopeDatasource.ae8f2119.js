"use strict";(self.webpackChunkPyroscope=self.webpackChunkPyroscope||[]).push([["737"],{76251:function(e,r,t){async function s(...e){let r=await t.g.fetch(...e);if(!1===r.ok){let e=r.headers.get("content-type");if(e?.includes("application/json")){let e=await r.json();if(e.error)throw new a(e.error,r.status);if(e.message)throw new a(e.message,r.status)}let t=await r.text();if(t)throw new a(t,r.status);throw new i(r)}return r}async function o(...e){let r=await s(...e);return await r.json()}t.d(r,{he:()=>s,rd:()=>o});class i extends Error{status;constructor(e){super(`${e.status} ${e.statusText}`),this.status=e.status,Object.setPrototypeOf(this,i.prototype)}}class a extends Error{status;constructor(e,r){super(e),this.status=r,Object.setPrototypeOf(this,a.prototype)}}},80175:function(e,r,t){t.r(r),t.d(r,{PyroscopeDatasource:()=>c});var s=t(76251);let o=async function(){for(var e=arguments.length,r=Array(e),t=0;t<e;t++)r[t]=arguments[t];let o=await (0,s.he)(...r);try{return await o.json()}catch(e){throw console.error("Invalid response from server",e),Error("Invalid response from server")}};function i(e,r,t,s){let{datasourceUrl:i,headers:a={}}=t,n=`${i}${e}`;return r&&(n+="?"+new URLSearchParams(r)),o(n,{method:"POST",headers:a,body:JSON.stringify(s)})}var a=t(24246),n=t(60243);t(54538);let c={createClient:(e,r)=>{let{directUrl:t,proxy:s}=e,{proxyUrl:a}=r,n=t??a;if(void 0===n)throw Error("No URL specified for Pyroscope client. You can use directUrl in the spec to configure it.");let c=null==s?void 0:s.spec.headers;return{options:{datasourceUrl:n},searchProfiles:(e,r)=>(function(e,r,t){let{datasourceUrl:s,headers:i={}}=t,a=`${s}${e}`;return r&&(a+="?"+new URLSearchParams(r)),o(a,{method:"GET",headers:i})})("/pyroscope/render",e,{datasourceUrl:n,headers:r??c}),searchProfileTypes:(e,r,t)=>i("/querier.v1.QuerierService/ProfileTypes",e,{datasourceUrl:n,headers:r??c},t),searchLabelNames:(e,r,t)=>i("/querier.v1.QuerierService/LabelNames",e,{datasourceUrl:n,headers:r??c},t),searchLabelValues:(e,r,t)=>i("/querier.v1.QuerierService/LabelValues",e,{datasourceUrl:n,headers:r??c},t),searchServices:(e,r)=>i("/querier.v1.QuerierService/LabelValues",e,{datasourceUrl:n,headers:r??c},{name:"service_name"})}},OptionsEditorComponent:function(e){let{value:r,onChange:t,isReadonly:s}=e;return(0,a.jsx)(n.HTTPSettingsEditor,{value:r,onChange:t,isReadonly:s,initialSpecDirect:{directUrl:""},initialSpecProxy:{proxy:{kind:"HTTPProxy",spec:{allowedEndpoints:[{endpointPattern:"/pyroscope/render",method:"GET"},{endpointPattern:"/querier.v1.QuerierService/ProfileTypes",method:"POST"},{endpointPattern:"/querier.v1.QuerierService/LabelNames",method:"POST"},{endpointPattern:"/querier.v1.QuerierService/LabelValues",method:"POST"}],url:""}}}})},createInitialOptions:()=>({directUrl:""})}}}]);