{"version":3,"sources":["../../../src/utils/use-query.ts"],"sourcesContent":["// Copyright 2025 The Perses Authors\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { useDatasourceClient } from '@perses-dev/plugin-system';\nimport { DatasourceSelector, StatusError } from '@perses-dev/core';\n\nimport { useQuery, UseQueryResult } from '@tanstack/react-query';\nimport {\n  SearchLabelNamesResponse,\n  SearchLabelValuesResponse,\n  SearchProfileTypesResponse,\n  PyroscopeClient,\n} from '../model';\n\nexport function useLabelNames(datasource: DatasourceSelector): UseQueryResult<SearchLabelNamesResponse, StatusError> {\n  const { data: client } = useDatasourceClient<PyroscopeClient>(datasource);\n\n  return useQuery<SearchLabelNamesResponse, StatusError>({\n    enabled: !!client,\n    queryKey: ['searchLabelNames', 'datasource', datasource],\n    queryFn: async () => {\n      return await client!.searchLabelNames({}, { 'content-type': 'application/json' }, {});\n    },\n  });\n}\n\nexport function useLabelValues(\n  datasource: DatasourceSelector,\n  labelName: string\n): UseQueryResult<SearchLabelValuesResponse, StatusError> {\n  const { data: client } = useDatasourceClient<PyroscopeClient>(datasource);\n\n  return useQuery<SearchLabelValuesResponse, StatusError>({\n    enabled: !!client,\n    queryKey: ['searchLabelValues', labelName, 'datasource', datasource],\n    queryFn: async () => {\n      return await client!.searchLabelValues({}, { 'content-type': 'application/json' }, { name: labelName });\n    },\n  });\n}\n\nexport function useProfileTypes(\n  datasource: DatasourceSelector\n): UseQueryResult<SearchProfileTypesResponse, StatusError> {\n  const { data: client } = useDatasourceClient<PyroscopeClient>(datasource);\n\n  return useQuery<SearchProfileTypesResponse, StatusError>({\n    enabled: !!client,\n    queryKey: ['searchProfileTypes', 'datasource', datasource],\n    queryFn: async () => {\n      return await client!.searchProfileTypes({}, { 'content-type': 'application/json' }, {});\n    },\n  });\n}\n\nexport function useServices(datasource: DatasourceSelector): UseQueryResult<SearchLabelValuesResponse, StatusError> {\n  const { data: client } = useDatasourceClient<PyroscopeClient>(datasource);\n\n  return useQuery<SearchLabelValuesResponse, StatusError>({\n    enabled: !!client,\n    queryKey: ['searchServices', 'datasource', datasource],\n    queryFn: async () => {\n      return await client!.searchServices({}, { 'content-type': 'application/json' });\n    },\n  });\n}\n\nexport function filterLabelNamesOptions(labelNamesOptions: string[]): string[] {\n  const regex = /^__.*__$/;\n  return labelNamesOptions.filter((labelName) => !regex.test(labelName) && labelName !== 'service_name');\n}\n"],"names":["useDatasourceClient","useQuery","useLabelNames","datasource","data","client","enabled","queryKey","queryFn","searchLabelNames","useLabelValues","labelName","searchLabelValues","name","useProfileTypes","searchProfileTypes","useServices","searchServices","filterLabelNamesOptions","labelNamesOptions","regex","filter","test"],"mappings":"AAAA,oCAAoC;AACpC,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,6CAA6C;AAC7C,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AAEjC,SAASA,mBAAmB,QAAQ,4BAA4B;AAGhE,SAASC,QAAQ,QAAwB,wBAAwB;AAQjE,OAAO,SAASC,cAAcC,UAA8B;IAC1D,MAAM,EAAEC,MAAMC,MAAM,EAAE,GAAGL,oBAAqCG;IAE9D,OAAOF,SAAgD;QACrDK,SAAS,CAAC,CAACD;QACXE,UAAU;YAAC;YAAoB;YAAcJ;SAAW;QACxDK,SAAS;YACP,OAAO,MAAMH,OAAQI,gBAAgB,CAAC,CAAC,GAAG;gBAAE,gBAAgB;YAAmB,GAAG,CAAC;QACrF;IACF;AACF;AAEA,OAAO,SAASC,eACdP,UAA8B,EAC9BQ,SAAiB;IAEjB,MAAM,EAAEP,MAAMC,MAAM,EAAE,GAAGL,oBAAqCG;IAE9D,OAAOF,SAAiD;QACtDK,SAAS,CAAC,CAACD;QACXE,UAAU;YAAC;YAAqBI;YAAW;YAAcR;SAAW;QACpEK,SAAS;YACP,OAAO,MAAMH,OAAQO,iBAAiB,CAAC,CAAC,GAAG;gBAAE,gBAAgB;YAAmB,GAAG;gBAAEC,MAAMF;YAAU;QACvG;IACF;AACF;AAEA,OAAO,SAASG,gBACdX,UAA8B;IAE9B,MAAM,EAAEC,MAAMC,MAAM,EAAE,GAAGL,oBAAqCG;IAE9D,OAAOF,SAAkD;QACvDK,SAAS,CAAC,CAACD;QACXE,UAAU;YAAC;YAAsB;YAAcJ;SAAW;QAC1DK,SAAS;YACP,OAAO,MAAMH,OAAQU,kBAAkB,CAAC,CAAC,GAAG;gBAAE,gBAAgB;YAAmB,GAAG,CAAC;QACvF;IACF;AACF;AAEA,OAAO,SAASC,YAAYb,UAA8B;IACxD,MAAM,EAAEC,MAAMC,MAAM,EAAE,GAAGL,oBAAqCG;IAE9D,OAAOF,SAAiD;QACtDK,SAAS,CAAC,CAACD;QACXE,UAAU;YAAC;YAAkB;YAAcJ;SAAW;QACtDK,SAAS;YACP,OAAO,MAAMH,OAAQY,cAAc,CAAC,CAAC,GAAG;gBAAE,gBAAgB;YAAmB;QAC/E;IACF;AACF;AAEA,OAAO,SAASC,wBAAwBC,iBAA2B;IACjE,MAAMC,QAAQ;IACd,OAAOD,kBAAkBE,MAAM,CAAC,CAACV,YAAc,CAACS,MAAME,IAAI,CAACX,cAAcA,cAAc;AACzF"}