{"version":3,"sources":["../../../src/model/api-types.ts"],"sourcesContent":["// Copyright 2025 The Perses Authors\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Request parameters of Pyroscope HTTP API endpoint GET /pyroscope/render\n * https://grafana.com/docs/pyroscope/latest/reference-server-api/#querying-profile-data\n */\nexport interface SearchProfilesParameters {\n  query: string;\n  /** the start time can be an absolute value (number) or a relative value (string). Ex of relative value : now-15m*/\n  from: string | number;\n  /** end of the search window, default : now */\n  until?: string | number;\n  /** format of the returned profiling data, default: json */\n  format?: 'json' | 'dot';\n  /** maximum number of nodes the resulting flame graph will contain, default: 50 */\n  maxNodes?: number;\n  groupeBy?: string;\n}\n\n/**\n * Response of Pyroscope HTTP API endpoint GET /pyroscope/render\n * https://grafana.com/docs/pyroscope/latest/reference-server-api/#query-output\n */\nexport interface SearchProfilesResponse {\n  flamebearer: Flamebearer;\n  metadata: Metadata;\n  timeline: Timeline;\n}\n\nexport interface Flamebearer {\n  names: string[];\n  levels: number[][];\n  numTicks: number;\n  maxSelf: number;\n}\n\nexport interface Metadata {\n  format: 'single' | 'double';\n  spyName: string;\n  sampleRate: number;\n  units: string;\n  name: string;\n}\n\nexport interface Timeline {\n  startTime: number;\n  samples: number[];\n  durationDelta: number;\n}\n\n/**\n * Request parameters of Pyroscope HTTP API endpoint POST /querier.v1.QuerierService/ProfileTypes\n */\nexport type SearchProfileTypesParameters = Record<string, never>;\n\n/**\n * Response of Pyroscope HTTP API endpoint POST /querier.v1.QuerierService/ProfileTypes\n */\nexport interface SearchProfileTypesResponse {\n  profileTypes: ProfileType[];\n}\n\nexport interface ProfileType {\n  ID: string;\n  name: string;\n  sampleType: string;\n  sampleUnit: string;\n  periodType: string;\n  periodUnit: string;\n}\n\n/**\n * Request parameters of Pyroscope HTTP API endpoint POST /querier.v1.QuerierService/LabelNames\n */\nexport type SearchLabelNamesParameters = Record<string, never>;\n\n/**\n * Response of Pyroscope HTTP API endpoint POST /querier.v1.QuerierService/LabelNames\n */\nexport interface SearchLabelNamesResponse {\n  names: string[];\n}\n\n/**\n * Request parameters of Pyroscope HTTP API endpoint POST /querier.v1.QuerierService/LabelValues\n */\nexport type SearchLabelValuesParameters = Record<string, never>;\n\n/**\n * Response of Pyroscope HTTP API endpoint POST /querier.v1.QuerierService/LabelValues\n */\nexport interface SearchLabelValuesResponse {\n  names: string[];\n}\n"],"names":[],"mappings":"AAAA,oCAAoC;AACpC,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,6CAA6C;AAC7C,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AAEjC;;;CAGC,GAmFD;;CAEC,GACD,WAEC"}