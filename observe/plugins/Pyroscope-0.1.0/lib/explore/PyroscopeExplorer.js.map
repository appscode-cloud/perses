{"version":3,"sources":["../../../src/explore/PyroscopeExplorer.tsx"],"sourcesContent":["// Copyright 2025 The Perses Authors\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Box, Stack } from '@mui/material';\nimport { ReactElement } from 'react';\nimport { DataQueriesProvider, MultiQueryEditor } from '@perses-dev/plugin-system';\nimport { Panel } from '@perses-dev/dashboards';\nimport { QueryDefinition } from '@perses-dev/core';\nimport { useExplorerManagerContext } from '@perses-dev/explore';\n\ninterface ProfilesExplorerQueryParams {\n  queries?: QueryDefinition[];\n}\n\nconst initialSpec = {\n  palette: 'package-name',\n  showSettings: true,\n  showSeries: true,\n  showTable: true,\n  showFlameGraph: true,\n};\n\nfunction FlameGraphPanel({ queries }: { queries: QueryDefinition[] }): ReactElement {\n  return (\n    <Panel\n      panelOptions={{\n        hideHeader: true,\n      }}\n      definition={{\n        kind: 'Panel',\n        spec: { queries, display: { name: '' }, plugin: { kind: 'FlameChart', spec: initialSpec } },\n      }}\n    />\n  );\n}\n\nexport function PyroscopeExplorer(): ReactElement {\n  const {\n    data: { queries = [] },\n    setData,\n  } = useExplorerManagerContext<ProfilesExplorerQueryParams>();\n\n  // map ProfileQueryDefinition to Definition<UnknownSpec>\n  const definitions = queries.length\n    ? queries.map((query: QueryDefinition) => {\n        return {\n          kind: query.spec.plugin.kind,\n          spec: query.spec.plugin.spec,\n        };\n      })\n    : [];\n\n  return (\n    <Stack gap={2} sx={{ width: '100%' }}>\n      <MultiQueryEditor\n        queryTypes={['ProfileQuery']}\n        onChange={(newQueries) => setData({ queries: newQueries })}\n        queries={queries}\n      />\n      <DataQueriesProvider definitions={definitions}>\n        <Box height={980}>\n          <FlameGraphPanel queries={queries} />\n        </Box>\n      </DataQueriesProvider>\n    </Stack>\n  );\n}\n"],"names":["Box","Stack","DataQueriesProvider","MultiQueryEditor","Panel","useExplorerManagerContext","initialSpec","palette","showSettings","showSeries","showTable","showFlameGraph","FlameGraphPanel","queries","panelOptions","hideHeader","definition","kind","spec","display","name","plugin","PyroscopeExplorer","data","setData","definitions","length","map","query","gap","sx","width","queryTypes","onChange","newQueries","height"],"mappings":"AAAA,oCAAoC;AACpC,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,6CAA6C;AAC7C,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEjC,SAASA,GAAG,EAAEC,KAAK,QAAQ,gBAAgB;AAE3C,SAASC,mBAAmB,EAAEC,gBAAgB,QAAQ,4BAA4B;AAClF,SAASC,KAAK,QAAQ,yBAAyB;AAE/C,SAASC,yBAAyB,QAAQ,sBAAsB;AAMhE,MAAMC,cAAc;IAClBC,SAAS;IACTC,cAAc;IACdC,YAAY;IACZC,WAAW;IACXC,gBAAgB;AAClB;AAEA,SAASC,gBAAgB,EAAEC,OAAO,EAAkC;IAClE,qBACE,KAACT;QACCU,cAAc;YACZC,YAAY;QACd;QACAC,YAAY;YACVC,MAAM;YACNC,MAAM;gBAAEL;gBAASM,SAAS;oBAAEC,MAAM;gBAAG;gBAAGC,QAAQ;oBAAEJ,MAAM;oBAAcC,MAAMZ;gBAAY;YAAE;QAC5F;;AAGN;AAEA,OAAO,SAASgB;IACd,MAAM,EACJC,MAAM,EAAEV,UAAU,EAAE,EAAE,EACtBW,OAAO,EACR,GAAGnB;IAEJ,wDAAwD;IACxD,MAAMoB,cAAcZ,QAAQa,MAAM,GAC9Bb,QAAQc,GAAG,CAAC,CAACC;QACX,OAAO;YACLX,MAAMW,MAAMV,IAAI,CAACG,MAAM,CAACJ,IAAI;YAC5BC,MAAMU,MAAMV,IAAI,CAACG,MAAM,CAACH,IAAI;QAC9B;IACF,KACA,EAAE;IAEN,qBACE,MAACjB;QAAM4B,KAAK;QAAGC,IAAI;YAAEC,OAAO;QAAO;;0BACjC,KAAC5B;gBACC6B,YAAY;oBAAC;iBAAe;gBAC5BC,UAAU,CAACC,aAAeV,QAAQ;wBAAEX,SAASqB;oBAAW;gBACxDrB,SAASA;;0BAEX,KAACX;gBAAoBuB,aAAaA;0BAChC,cAAA,KAACzB;oBAAImC,QAAQ;8BACX,cAAA,KAACvB;wBAAgBC,SAASA;;;;;;AAKpC"}