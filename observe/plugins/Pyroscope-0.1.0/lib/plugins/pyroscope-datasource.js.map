{"version":3,"sources":["../../../src/plugins/pyroscope-datasource.tsx"],"sourcesContent":["// Copyright 2025 The Perses Authors\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { DatasourcePlugin } from '@perses-dev/plugin-system';\nimport {\n  PyroscopeClient,\n  searchProfiles,\n  searchProfileTypes,\n  searchLabelNames,\n  searchLabelValues,\n  searchServices,\n} from '../model/pyroscope-client';\nimport { PyroscopeDatasourceSpec } from './pyroscope-datasource-types';\nimport { PyroscopeDatasourceEditor } from './PyroscopeDatasourceEditor';\n\n/**\n * Creates a PyroscopeClient for a specific datasource spec.\n */\nconst createClient: DatasourcePlugin<PyroscopeDatasourceSpec, PyroscopeClient>['createClient'] = (spec, options) => {\n  const { directUrl, proxy } = spec;\n  const { proxyUrl } = options;\n\n  // Use the direct URL if specified, but fallback to the proxyUrl by default if not specified\n  const datasourceUrl = directUrl ?? proxyUrl;\n  if (datasourceUrl === undefined) {\n    throw new Error('No URL specified for Pyroscope client. You can use directUrl in the spec to configure it.');\n  }\n\n  const specHeaders = proxy?.spec.headers;\n\n  return {\n    options: {\n      datasourceUrl,\n    },\n    searchProfiles: (params, headers) => searchProfiles(params, { datasourceUrl, headers: headers ?? specHeaders }),\n    searchProfileTypes: (params, headers, body) =>\n      searchProfileTypes(params, { datasourceUrl, headers: headers ?? specHeaders }, body),\n    searchLabelNames: (params, headers, body) =>\n      searchLabelNames(params, { datasourceUrl, headers: headers ?? specHeaders }, body),\n    searchLabelValues: (params, headers, body) =>\n      searchLabelValues(params, { datasourceUrl, headers: headers ?? specHeaders }, body),\n    searchServices: (params, headers) => searchServices(params, { datasourceUrl, headers: headers ?? specHeaders }),\n  };\n};\n\nexport const PyroscopeDatasource: DatasourcePlugin<PyroscopeDatasourceSpec, PyroscopeClient> = {\n  createClient,\n  OptionsEditorComponent: PyroscopeDatasourceEditor,\n  createInitialOptions: () => ({ directUrl: '' }),\n};\n"],"names":["searchProfiles","searchProfileTypes","searchLabelNames","searchLabelValues","searchServices","PyroscopeDatasourceEditor","createClient","spec","options","directUrl","proxy","proxyUrl","datasourceUrl","undefined","Error","specHeaders","headers","params","body","PyroscopeDatasource","OptionsEditorComponent","createInitialOptions"],"mappings":"AAAA,oCAAoC;AACpC,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,6CAA6C;AAC7C,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AAGjC,SAEEA,cAAc,EACdC,kBAAkB,EAClBC,gBAAgB,EAChBC,iBAAiB,EACjBC,cAAc,QACT,4BAA4B;AAEnC,SAASC,yBAAyB,QAAQ,8BAA8B;AAExE;;CAEC,GACD,MAAMC,eAA2F,CAACC,MAAMC;IACtG,MAAM,EAAEC,SAAS,EAAEC,KAAK,EAAE,GAAGH;IAC7B,MAAM,EAAEI,QAAQ,EAAE,GAAGH;IAErB,4FAA4F;IAC5F,MAAMI,gBAAgBH,aAAaE;IACnC,IAAIC,kBAAkBC,WAAW;QAC/B,MAAM,IAAIC,MAAM;IAClB;IAEA,MAAMC,cAAcL,OAAOH,KAAKS;IAEhC,OAAO;QACLR,SAAS;YACPI;QACF;QACAZ,gBAAgB,CAACiB,QAAQD,UAAYhB,eAAeiB,QAAQ;gBAAEL;gBAAeI,SAASA,WAAWD;YAAY;QAC7Gd,oBAAoB,CAACgB,QAAQD,SAASE,OACpCjB,mBAAmBgB,QAAQ;gBAAEL;gBAAeI,SAASA,WAAWD;YAAY,GAAGG;QACjFhB,kBAAkB,CAACe,QAAQD,SAASE,OAClChB,iBAAiBe,QAAQ;gBAAEL;gBAAeI,SAASA,WAAWD;YAAY,GAAGG;QAC/Ef,mBAAmB,CAACc,QAAQD,SAASE,OACnCf,kBAAkBc,QAAQ;gBAAEL;gBAAeI,SAASA,WAAWD;YAAY,GAAGG;QAChFd,gBAAgB,CAACa,QAAQD,UAAYZ,eAAea,QAAQ;gBAAEL;gBAAeI,SAASA,WAAWD;YAAY;IAC/G;AACF;AAEA,OAAO,MAAMI,sBAAkF;IAC7Fb;IACAc,wBAAwBf;IACxBgB,sBAAsB,IAAO,CAAA;YAAEZ,WAAW;QAAG,CAAA;AAC/C,EAAE"}