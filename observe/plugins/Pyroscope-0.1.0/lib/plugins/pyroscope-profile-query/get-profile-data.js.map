{"version":3,"sources":["../../../../src/plugins/pyroscope-profile-query/get-profile-data.ts"],"sourcesContent":["// Copyright 2025 The Perses Authors\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { ProfileQueryPlugin } from '@perses-dev/plugin-system';\nimport { AbsoluteTimeRange, StackTrace, ProfileData } from '@perses-dev/core';\nimport { getUnixTime } from 'date-fns';\nimport { PyroscopeProfileQuerySpec, PYROSCOPE_DATASOURCE_KIND, PyroscopeDatasourceSelector } from '../../model';\nimport { PyroscopeClient } from '../../model/pyroscope-client';\nimport { SearchProfilesParameters, SearchProfilesResponse } from '../../model/api-types';\nimport { computeFilterExpr } from '../../utils/types';\n\nexport function getUnixTimeRange(timeRange: AbsoluteTimeRange): { start: number; end: number } {\n  const { start, end } = timeRange;\n  return {\n    start: Math.ceil(getUnixTime(start)),\n    end: Math.ceil(getUnixTime(end)),\n  };\n}\n\nexport const getProfileData: ProfileQueryPlugin<PyroscopeProfileQuerySpec>['getProfileData'] = async (\n  spec,\n  context\n) => {\n  const defaultPyroscopeDatasource: PyroscopeDatasourceSelector = {\n    kind: PYROSCOPE_DATASOURCE_KIND,\n  };\n\n  const client: PyroscopeClient = await context.datasourceStore.getDatasourceClient(\n    spec.datasource ?? defaultPyroscopeDatasource\n  );\n\n  const buildQueryString = () => {\n    let query: string = '';\n    if (spec.service) {\n      query = `service_name=\"${spec.service}\"`;\n    }\n    if (spec.filters && spec.filters.length > 0) {\n      const filterExpr = computeFilterExpr(spec.filters);\n      if (query === '') {\n        query = filterExpr;\n      } else {\n        query += ',' + filterExpr;\n      }\n    }\n    query = spec.profileType + (query === '' ? '' : '{' + query + '}');\n    return query;\n  };\n\n  const getParams = (): SearchProfilesParameters => {\n    const params: SearchProfilesParameters = {\n      // example of query\n      // query: `process_cpu:cpu:nanoseconds:cpu:nanoseconds{service_name=\"pyroscope\"}`,\n      query: buildQueryString(),\n      // the default value is now-1h\n      from: 'now-1h',\n    };\n\n    // handle time range selection from UI drop down (e.g. last 5 minutes, last 1 hour )\n    if (context.absoluteTimeRange) {\n      const { start, end } = getUnixTimeRange(context.absoluteTimeRange);\n      params.from = start;\n      params.until = end;\n    }\n\n    if (spec.maxNodes) {\n      params.maxNodes = spec.maxNodes;\n    }\n\n    return params;\n  };\n\n  const response = await client.searchProfiles(getParams());\n\n  // return a profile data\n  return transformProfileResponse(response);\n};\n\n/**\n * This function transform the Pyroscope response into the Perses profile format\n */\nfunction transformProfileResponse(response: SearchProfilesResponse): ProfileData {\n  const newResponse: ProfileData = {\n    profile: {\n      stackTrace: {} as StackTrace,\n    },\n    numTicks: 0,\n    maxSelf: 0,\n    metadata: {\n      spyName: '',\n      sampleRate: 0,\n      units: '',\n      name: '',\n    },\n    timeline: {\n      startTime: 0,\n      samples: [],\n      durationDelta: 0,\n    },\n  };\n\n  if (!response) {\n    return newResponse;\n  }\n\n  const stackTraces: StackTrace[][] = [];\n\n  // stackTraces id from 1\n  let id = 1;\n  // Set the profile stackTrace property\n  for (let i = 0; i < response.flamebearer.levels.length; i++) {\n    let current = 0;\n    const row: StackTrace[] = [];\n    for (let j = 0; j < response.flamebearer.levels[i].length; j += 4) {\n      const temp: StackTrace = {} as StackTrace;\n      temp.id = id;\n      id += 1;\n      const indexInNamesArray = response.flamebearer.levels[i][j + 3]; // index in names array\n      temp.name = response.flamebearer.names[indexInNamesArray];\n      temp.level = i;\n      temp.total = response.flamebearer.levels[i][j + 1];\n      temp.self = response.flamebearer.levels[i][j + 2];\n\n      // start and end\n      current += response.flamebearer.levels[i][j]; // current += offset\n      temp.start = current;\n      current += response.flamebearer.levels[i][j + 1]; // current += total\n      temp.end = current;\n\n      temp.children = [];\n\n      row.push(temp);\n    }\n\n    stackTraces.push(row);\n  }\n\n  addChildren(stackTraces); // adding children to nodes\n  newResponse.profile.stackTrace = stackTraces[0][0];\n\n  // Set other properties\n  newResponse.numTicks = response.flamebearer.numTicks;\n  newResponse.maxSelf = response.flamebearer.maxSelf;\n\n  newResponse.metadata = {\n    spyName: response.metadata.spyName,\n    sampleRate: response.metadata.sampleRate,\n    units: response.metadata.units,\n    name: response.metadata.name,\n  };\n\n  newResponse.timeline = {\n    startTime: response.timeline.startTime,\n    samples: response.timeline.samples,\n    durationDelta: response.timeline.durationDelta,\n  };\n\n  return newResponse;\n}\n\n// todo: optimize this method as soon as possible\nfunction addChildren(stackTraces: StackTrace[][]): void {\n  // for (let i = stackTraces.length - 1; i > 0; i--) {\n  for (let i = 1; i < stackTraces.length; i++) {\n    for (let j = 0; j < stackTraces[i].length; j++) {\n      for (let k = 0; k < stackTraces[i - 1].length; k++) {\n        if (\n          stackTraces[i][j].start >= stackTraces[i - 1][k].start &&\n          stackTraces[i][j].end <= stackTraces[i - 1][k].end\n        ) {\n          stackTraces[i - 1][k].children.push(stackTraces[i][j]);\n          break;\n        }\n      }\n    }\n  }\n}\n"],"names":["getUnixTime","PYROSCOPE_DATASOURCE_KIND","computeFilterExpr","getUnixTimeRange","timeRange","start","end","Math","ceil","getProfileData","spec","context","defaultPyroscopeDatasource","kind","client","datasourceStore","getDatasourceClient","datasource","buildQueryString","query","service","filters","length","filterExpr","profileType","getParams","params","from","absoluteTimeRange","until","maxNodes","response","searchProfiles","transformProfileResponse","newResponse","profile","stackTrace","numTicks","maxSelf","metadata","spyName","sampleRate","units","name","timeline","startTime","samples","durationDelta","stackTraces","id","i","flamebearer","levels","current","row","j","temp","indexInNamesArray","names","level","total","self","children","push","addChildren","k"],"mappings":"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"}