{"version":3,"sources":["../../../src/components/HistogramChart.tsx"],"sourcesContent":["// Copyright 2025 The Perses Authors\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { ReactElement, useMemo } from 'react';\nimport { FormatOptions, BucketTuple, ThresholdOptions } from '@perses-dev/core';\nimport { EChart, getFormattedAxis, useChartsTheme } from '@perses-dev/components';\nimport { use, EChartsCoreOption } from 'echarts/core';\nimport { CustomSeriesRenderItemAPI, CustomSeriesRenderItemParams } from 'echarts';\nimport { CustomChart } from 'echarts/charts';\nimport { getColorFromThresholds } from '../utils';\n\nuse([CustomChart]);\n\nexport interface HistogramChartData {\n  buckets: BucketTuple[];\n}\n\nexport interface HistogramChartProps {\n  width: number;\n  height: number;\n  data: HistogramChartData;\n  format?: FormatOptions;\n  min?: number;\n  max?: number;\n  thresholds?: ThresholdOptions;\n  // TODO: exponential?: boolean;\n}\n\nexport function HistogramChart({\n  width,\n  height,\n  data,\n  format,\n  min,\n  max,\n  thresholds,\n}: HistogramChartProps): ReactElement | null {\n  const chartsTheme = useChartsTheme();\n\n  const transformedData = useMemo(() => {\n    return data.buckets.map(([bucket, lowerBound, upperBound, count]) => {\n      return {\n        value: [parseFloat(lowerBound), parseFloat(upperBound), parseFloat(count), bucket],\n        itemStyle: {\n          color: getColorFromThresholds(\n            parseFloat(lowerBound),\n            thresholds,\n            chartsTheme,\n            chartsTheme.echartsTheme[0] as string\n          ),\n        },\n      };\n    });\n  }, [chartsTheme, data.buckets, thresholds]);\n\n  const minXAxis: number | undefined = useMemo(() => {\n    if (min) {\n      return min;\n    }\n\n    if (transformedData && transformedData[0]) {\n      return Math.min(0, Math.floor(transformedData[0]?.value[0] ?? 0));\n    }\n    return undefined;\n  }, [min, transformedData]);\n\n  const maxXAxis: number | undefined = useMemo(() => {\n    if (max) {\n      return max;\n    }\n    if (transformedData && transformedData[transformedData.length - 1]) {\n      return Math.ceil(transformedData[transformedData.length - 1]?.value[1] ?? 1);\n    }\n    return undefined;\n  }, [max, transformedData]);\n\n  const option: EChartsCoreOption = useMemo(() => {\n    if (!transformedData) return chartsTheme.noDataOption;\n\n    return {\n      title: {\n        show: false,\n      },\n      tooltip: {},\n      xAxis: {\n        scale: false,\n        min: minXAxis,\n        max: maxXAxis,\n      },\n      yAxis: getFormattedAxis({}, format),\n      series: [\n        {\n          type: 'custom',\n          renderItem: function (params: CustomSeriesRenderItemParams, api: CustomSeriesRenderItemAPI) {\n            const yValue = api.value(2);\n            const start = api.coord([api.value(0), yValue]);\n            const size = api.size?.([(api.value(1) as number) - (api.value(0) as number), yValue]) as number[];\n            const style = api.style?.();\n\n            return {\n              type: 'rect',\n              shape: {\n                x: start[0],\n                y: start[1],\n                width: size[0],\n                height: size[1],\n              },\n              style: style,\n            };\n          },\n          label: {\n            show: false,\n          },\n          dimensions: ['from', 'to'],\n          encode: {\n            x: [0, 1],\n            y: 2,\n            tooltip: [0, 1],\n            itemName: 2,\n          },\n          data: transformedData,\n        },\n      ],\n    };\n  }, [chartsTheme.noDataOption, format, maxXAxis, minXAxis, transformedData]);\n\n  return (\n    <EChart\n      sx={{\n        width: width,\n        height: height,\n        padding: `${chartsTheme.container.padding.default}px`,\n      }}\n      option={option}\n      theme={chartsTheme.echartsTheme}\n    />\n  );\n}\n"],"names":["useMemo","EChart","getFormattedAxis","useChartsTheme","use","CustomChart","getColorFromThresholds","HistogramChart","width","height","data","format","min","max","thresholds","chartsTheme","transformedData","buckets","map","bucket","lowerBound","upperBound","count","value","parseFloat","itemStyle","color","echartsTheme","minXAxis","Math","floor","undefined","maxXAxis","length","ceil","option","noDataOption","title","show","tooltip","xAxis","scale","yAxis","series","type","renderItem","params","api","yValue","start","coord","size","style","shape","x","y","label","dimensions","encode","itemName","sx","padding","container","default","theme"],"mappings":"AAAA,oCAAoC;AACpC,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,6CAA6C;AAC7C,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEjC,SAAuBA,OAAO,QAAQ,QAAQ;AAE9C,SAASC,MAAM,EAAEC,gBAAgB,EAAEC,cAAc,QAAQ,yBAAyB;AAClF,SAASC,GAAG,QAA2B,eAAe;AAEtD,SAASC,WAAW,QAAQ,iBAAiB;AAC7C,SAASC,sBAAsB,QAAQ,WAAW;AAElDF,IAAI;IAACC;CAAY;AAiBjB,OAAO,SAASE,eAAe,EAC7BC,KAAK,EACLC,MAAM,EACNC,IAAI,EACJC,MAAM,EACNC,GAAG,EACHC,GAAG,EACHC,UAAU,EACU;IACpB,MAAMC,cAAcZ;IAEpB,MAAMa,kBAAkBhB,QAAQ;QAC9B,OAAOU,KAAKO,OAAO,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQC,YAAYC,YAAYC,MAAM;YAC9D,OAAO;gBACLC,OAAO;oBAACC,WAAWJ;oBAAaI,WAAWH;oBAAaG,WAAWF;oBAAQH;iBAAO;gBAClFM,WAAW;oBACTC,OAAOpB,uBACLkB,WAAWJ,aACXN,YACAC,aACAA,YAAYY,YAAY,CAAC,EAAE;gBAE/B;YACF;QACF;IACF,GAAG;QAACZ;QAAaL,KAAKO,OAAO;QAAEH;KAAW;IAE1C,MAAMc,WAA+B5B,QAAQ;QAC3C,IAAIY,KAAK;YACP,OAAOA;QACT;QAEA,IAAII,mBAAmBA,eAAe,CAAC,EAAE,EAAE;YACzC,OAAOa,KAAKjB,GAAG,CAAC,GAAGiB,KAAKC,KAAK,CAACd,eAAe,CAAC,EAAE,EAAEO,KAAK,CAAC,EAAE,IAAI;QAChE;QACA,OAAOQ;IACT,GAAG;QAACnB;QAAKI;KAAgB;IAEzB,MAAMgB,WAA+BhC,QAAQ;QAC3C,IAAIa,KAAK;YACP,OAAOA;QACT;QACA,IAAIG,mBAAmBA,eAAe,CAACA,gBAAgBiB,MAAM,GAAG,EAAE,EAAE;YAClE,OAAOJ,KAAKK,IAAI,CAAClB,eAAe,CAACA,gBAAgBiB,MAAM,GAAG,EAAE,EAAEV,KAAK,CAAC,EAAE,IAAI;QAC5E;QACA,OAAOQ;IACT,GAAG;QAAClB;QAAKG;KAAgB;IAEzB,MAAMmB,SAA4BnC,QAAQ;QACxC,IAAI,CAACgB,iBAAiB,OAAOD,YAAYqB,YAAY;QAErD,OAAO;YACLC,OAAO;gBACLC,MAAM;YACR;YACAC,SAAS,CAAC;YACVC,OAAO;gBACLC,OAAO;gBACP7B,KAAKgB;gBACLf,KAAKmB;YACP;YACAU,OAAOxC,iBAAiB,CAAC,GAAGS;YAC5BgC,QAAQ;gBACN;oBACEC,MAAM;oBACNC,YAAY,SAAUC,MAAoC,EAAEC,GAA8B;wBACxF,MAAMC,SAASD,IAAIxB,KAAK,CAAC;wBACzB,MAAM0B,QAAQF,IAAIG,KAAK,CAAC;4BAACH,IAAIxB,KAAK,CAAC;4BAAIyB;yBAAO;wBAC9C,MAAMG,OAAOJ,IAAII,IAAI,GAAG;4BAAEJ,IAAIxB,KAAK,CAAC,KAAiBwB,IAAIxB,KAAK,CAAC;4BAAeyB;yBAAO;wBACrF,MAAMI,QAAQL,IAAIK,KAAK;wBAEvB,OAAO;4BACLR,MAAM;4BACNS,OAAO;gCACLC,GAAGL,KAAK,CAAC,EAAE;gCACXM,GAAGN,KAAK,CAAC,EAAE;gCACXzC,OAAO2C,IAAI,CAAC,EAAE;gCACd1C,QAAQ0C,IAAI,CAAC,EAAE;4BACjB;4BACAC,OAAOA;wBACT;oBACF;oBACAI,OAAO;wBACLlB,MAAM;oBACR;oBACAmB,YAAY;wBAAC;wBAAQ;qBAAK;oBAC1BC,QAAQ;wBACNJ,GAAG;4BAAC;4BAAG;yBAAE;wBACTC,GAAG;wBACHhB,SAAS;4BAAC;4BAAG;yBAAE;wBACfoB,UAAU;oBACZ;oBACAjD,MAAMM;gBACR;aACD;QACH;IACF,GAAG;QAACD,YAAYqB,YAAY;QAAEzB;QAAQqB;QAAUJ;QAAUZ;KAAgB;IAE1E,qBACE,KAACf;QACC2D,IAAI;YACFpD,OAAOA;YACPC,QAAQA;YACRoD,SAAS,GAAG9C,YAAY+C,SAAS,CAACD,OAAO,CAACE,OAAO,CAAC,EAAE,CAAC;QACvD;QACA5B,QAAQA;QACR6B,OAAOjD,YAAYY,YAAY;;AAGrC"}