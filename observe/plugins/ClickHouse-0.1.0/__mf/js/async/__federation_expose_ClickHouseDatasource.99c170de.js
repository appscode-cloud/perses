/*! For license information please see __federation_expose_ClickHouseDatasource.99c170de.js.LICENSE.txt */
"use strict";(self.chunk_ClickHouse=self.chunk_ClickHouse||[]).push([["9106"],{71426:function(e,t,r){var o=r(95554),i=Symbol.for("react.element"),a=Symbol.for("react.fragment"),s=Object.prototype.hasOwnProperty,n=o.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function l(e,t,r){var o,a={},l=null,u=null;for(o in void 0!==r&&(l=""+r),void 0!==t.key&&(l=""+t.key),void 0!==t.ref&&(u=t.ref),t)s.call(t,o)&&!c.hasOwnProperty(o)&&(a[o]=t[o]);if(e&&e.defaultProps)for(o in t=e.defaultProps)void 0===a[o]&&(a[o]=t[o]);return{$$typeof:i,type:e,key:l,ref:u,props:a,_owner:n.current}}t.Fragment=a,t.jsx=l,t.jsxs=l},24246:function(e,t,r){e.exports=r(71426)},29592:function(e,t,r){r.r(t),r.d(t,{ClickHouseDatasource:()=>n,ClickHouseDatasourceEditor:()=>a});var o=r(24246),i=r(86499);function a(e){let{value:t,onChange:r,isReadonly:a}=e;return(0,o.jsx)(i.HTTPSettingsEditor,{value:t,onChange:r,isReadonly:a,initialSpecDirect:{directUrl:""},initialSpecProxy:{proxy:{kind:"HTTPProxy",spec:{allowedEndpoints:[{endpointPattern:"/",method:"GET"}],url:""}}}})}async function s(e,t){var r;let{datasourceUrl:o,headers:i}=t,a=(r=o).startsWith("http://")||r.startsWith("https://")?new URL(r):new URL(r,window.location.origin);if(!e.query)throw Error("No query provided in params");let s=e.query.trim();s.toUpperCase().includes("FORMAT")||(s+=" FORMAT JSON"),a.searchParams.set("query",s),a.searchParams.set("database",e.database||"default");let n={method:"GET",headers:{...i}};try{let e=await fetch(a.toString(),n);if(!e.ok){let t=await e.text();return console.error("ClickHouse error response:",t),{status:"error",data:[]}}let t=await e.json();return{status:"success",data:t.data||t}}catch(e){throw Error(`ClickHouse query failed: ${e}`)}}let n={createClient:(e,t)=>{let{directUrl:r,proxy:o}=e,{proxyUrl:i}=t,a=r??i;if(void 0===a)throw Error("No URL specified for ClickHouseDatasource client. You can use directUrl in the spec to configure it.");let n=(null==o?void 0:o.spec.headers)||{};return{options:{datasourceUrl:a},query:(e,t)=>s(e,{datasourceUrl:a,headers:t??n})}},OptionsEditorComponent:a,createInitialOptions:()=>({directUrl:""})}}}]);