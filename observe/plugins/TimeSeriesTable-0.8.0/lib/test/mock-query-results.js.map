{"version":3,"sources":["../../../src/test/mock-query-results.ts"],"sourcesContent":["// Copyright 2023 The Perses Authors\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { TimeSeriesData } from '@perses-dev/core';\n\nexport const MOCK_TIME_SERIES_QUERY_RESULT_MULTIVALUE = [\n  {\n    status: 'success',\n    fetchStatus: 'idle',\n    isLoading: false,\n    isSuccess: true,\n    isError: false,\n    data: {\n      timeRange: {\n        start: new Date(1666625490000),\n        end: new Date(1666625535000),\n      },\n      stepMs: 24379,\n      series: [\n        {\n          name: 'device=\"/dev/vda1\", env=\"demo\", fstype=\"ext4\", instance=\"demo.do.prometheus.io:9100\", job=\"node\", mountpoint=\"/\"',\n          values: [\n            [1666479357903, 0.27700745551584494],\n            [1666479382282, 0.27701284657366565],\n          ],\n          labels: {\n            device: '/dev/vda1',\n            env: 'demo',\n            fstype: 'ext4',\n            instance: 'demo.do.prometheus.io:9100',\n            job: 'node',\n            mountpoint: '/',\n          },\n        },\n        {\n          name: 'device=\"/dev/vda15\", env=\"demo\", fstype=\"vfat\", instance=\"demo.do.prometheus.io:9100\", job=\"node\", mountpoint=\"/boot/efi\"',\n          values: [\n            [1666479357903, 0.08486496097624885],\n            [1666479382282, 0.08486496097624885],\n          ],\n          labels: {\n            device: '/dev/vda15',\n            env: 'demo',\n            fstype: 'vfat',\n            instance: 'demo.do.prometheus.io:9100',\n            job: 'node',\n            mountpoint: '/boot/efi',\n          },\n        },\n      ],\n    },\n    dataUpdatedAt: 1666500979895,\n    error: null,\n    errorUpdatedAt: 0,\n    failureCount: 0,\n    errorUpdateCount: 0,\n    isFetched: true,\n    isFetchedAfterMount: true,\n    isFetching: false,\n    isRefetching: false,\n    isLoadingError: false,\n    isPaused: false,\n    isPlaceholderData: false,\n    isPreviousData: false,\n    isRefetchError: false,\n    isStale: true,\n  },\n];\n\nexport const MOCK_TIME_SERIES_QUERY_RESULT_SINGLEVALUE = [\n  {\n    status: 'success',\n    fetchStatus: 'idle',\n    isLoading: false,\n    isSuccess: true,\n    isError: false,\n    data: {\n      timeRange: {\n        start: new Date(1666625535000),\n        end: new Date(1666625535000),\n      },\n      stepMs: 24379,\n      series: [\n        {\n          name: 'device=\"/dev/vda1\", env=\"demo\", fstype=\"ext4\", instance=\"demo.do.prometheus.io:9100\", job=\"node\", mountpoint=\"/\"',\n          values: [[1666479357903, 0.27700745551584494]],\n          labels: {\n            device: '/dev/vda1',\n            env: 'demo',\n            fstype: 'ext4',\n            instance: 'demo.do.prometheus.io:9100',\n            job: 'node',\n            mountpoint: '/',\n          },\n        },\n        {\n          name: 'device=\"/dev/vda15\", env=\"demo\", fstype=\"vfat\", instance=\"demo.do.prometheus.io:9100\", job=\"node\", mountpoint=\"/boot/efi\"',\n          values: [[1666479357903, 0.08486496097624885]],\n          labels: {\n            device: '/dev/vda15',\n            env: 'demo',\n            fstype: 'vfat',\n            instance: 'demo.do.prometheus.io:9100',\n            job: 'node',\n            mountpoint: '/boot/efi',\n          },\n        },\n      ],\n    },\n    dataUpdatedAt: 1666500979895,\n    error: null,\n    errorUpdatedAt: 0,\n    failureCount: 0,\n    errorUpdateCount: 0,\n    isFetched: true,\n    isFetchedAfterMount: true,\n    isFetching: false,\n    isRefetching: false,\n    isLoadingError: false,\n    isPaused: false,\n    isPlaceholderData: false,\n    isPreviousData: false,\n    isRefetchError: false,\n    isStale: true,\n  },\n];\n\nexport const MOCK_TIME_SERIES_DATA_MULTIVALUE: TimeSeriesData = {\n  timeRange: {\n    start: new Date(1666625490000),\n    end: new Date(1666625535000),\n  },\n  stepMs: 24379,\n  series: [\n    {\n      name: 'device=\"/dev/vda1\", env=\"demo\", fstype=\"ext4\", instance=\"demo.do.prometheus.io:9100\", job=\"node\", mountpoint=\"/\"',\n      values: [\n        [1666479357903, 0.27700745551584494],\n        [1666479382282, 0.27701284657366565],\n      ],\n      labels: {\n        device: '/dev/vda1',\n        env: 'demo',\n        fstype: 'ext4',\n        instance: 'demo.do.prometheus.io:9100',\n        job: 'node',\n        mountpoint: '/',\n      },\n    },\n    {\n      name: 'device=\"/dev/vda15\", env=\"demo\", fstype=\"vfat\", instance=\"demo.do.prometheus.io:9100\", job=\"node\", mountpoint=\"/boot/efi\"',\n      values: [\n        [1666479357903, 0.08486496097624885],\n        [1666479382282, 0.08486496097624885],\n      ],\n      labels: {\n        device: '/dev/vda15',\n        env: 'demo',\n        fstype: 'vfat',\n        instance: 'demo.do.prometheus.io:9100',\n        job: 'node',\n        mountpoint: '/boot/efi',\n      },\n    },\n  ],\n};\n\nexport const MOCK_TIME_SERIES_DATA_SINGLEVALUE: TimeSeriesData = {\n  timeRange: {\n    start: new Date(1666625535000),\n    end: new Date(1666625535000),\n  },\n  stepMs: 24379,\n  series: [\n    {\n      name: 'device=\"/dev/vda1\", env=\"demo\", fstype=\"ext4\", instance=\"demo.do.prometheus.io:9100\", job=\"node\", mountpoint=\"/\"',\n      values: [[1666479357903, 0.27700745551584494]],\n      labels: {\n        device: '/dev/vda1',\n        env: 'demo',\n        fstype: 'ext4',\n        instance: 'demo.do.prometheus.io:9100',\n        job: 'node',\n        mountpoint: '/',\n      },\n    },\n    {\n      name: 'device=\"/dev/vda15\", env=\"demo\", fstype=\"vfat\", instance=\"demo.do.prometheus.io:9100\", job=\"node\", mountpoint=\"/boot/efi\"',\n      values: [[1666479357903, 0.08486496097624885]],\n      labels: {\n        device: '/dev/vda15',\n        env: 'demo',\n        fstype: 'vfat',\n        instance: 'demo.do.prometheus.io:9100',\n        job: 'node',\n        mountpoint: '/boot/efi',\n      },\n    },\n  ],\n};\n\nexport const MOCK_NULL_QUERY_RESULT = [\n  {\n    status: 'success',\n    fetchStatus: 'idle',\n    isLoading: false,\n    isSuccess: true,\n    isError: false,\n    data: {\n      timeRange: {\n        start: new Date(1677376110000),\n        end: new Date(1677376410000),\n      },\n      stepMs: 15000,\n      series: [\n        {\n          name: 'node_memory_Buffers_bytes{env=\"demo\",instance=\"demo.do.prometheus.io:9100\",job=\"node\"}',\n          values: [\n            [1677376110000, 40000000],\n            [1677376125000, 40000000],\n            [1677376140000, null],\n            [1677376155000, null],\n            [1677376170000, null],\n            [1677376185000, null],\n            [1677376200000, null],\n            [1677376215000, 40013824],\n            [1677376230000, 40038400],\n            [1677376245000, 40054784],\n            [1677376260000, 40071168],\n            [1677376275000, 40075264],\n            [1677376290000, 40091648],\n            [1677376305000, 40099840],\n            [1677376320000, 40120320],\n            [1677376335000, 40128512],\n            [1677376350000, 40153088],\n            [1677376365000, 40165376],\n            [1677376380000, 40177664],\n            [1677376395000, 40194048],\n            [1677376410000, 40198144],\n          ],\n          formattedName: 'node_memory_Buffers_bytes{env=\"demo\",instance=\"demo.do.prometheus.io:9100\",job=\"node\"}',\n          labels: {\n            env: 'demo',\n            instance: 'demo.do.prometheus.io:9100',\n            job: 'node',\n          },\n        },\n      ],\n    },\n    dataUpdatedAt: 1677376410000,\n    error: null,\n    errorUpdatedAt: 0,\n    failureCount: 0,\n    errorUpdateCount: 0,\n    isFetched: true,\n    isFetchedAfterMount: true,\n    isFetching: false,\n    isRefetching: false,\n    isLoadingError: false,\n    isPaused: false,\n    isPlaceholderData: false,\n    isPreviousData: false,\n    isRefetchError: false,\n    isStale: true,\n  },\n];\n\nexport const MOCK_TIME_SERIES_QUERY_DEFINITION = {\n  kind: 'TimeSeriesQuery',\n  spec: {\n    plugin: {\n      kind: 'PrometheusTimeSeriesQuery',\n      spec: {\n        query: '',\n      },\n    },\n  },\n};\n"],"names":["MOCK_TIME_SERIES_QUERY_RESULT_MULTIVALUE","status","fetchStatus","isLoading","isSuccess","isError","data","timeRange","start","Date","end","stepMs","series","name","values","labels","device","env","fstype","instance","job","mountpoint","dataUpdatedAt","error","errorUpdatedAt","failureCount","errorUpdateCount","isFetched","isFetchedAfterMount","isFetching","isRefetching","isLoadingError","isPaused","isPlaceholderData","isPreviousData","isRefetchError","isStale","MOCK_TIME_SERIES_QUERY_RESULT_SINGLEVALUE","MOCK_TIME_SERIES_DATA_MULTIVALUE","MOCK_TIME_SERIES_DATA_SINGLEVALUE","MOCK_NULL_QUERY_RESULT","formattedName","MOCK_TIME_SERIES_QUERY_DEFINITION","kind","spec","plugin","query"],"mappings":"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"}