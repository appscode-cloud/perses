{"version":3,"sources":["../../../src/components/HeatMapChart.tsx"],"sourcesContent":["// Copyright 2025 The Perses Authors\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { ReactElement, useMemo } from 'react';\nimport { FormatOptions, TimeScale } from '@perses-dev/core';\nimport { EChart, getFormattedAxis, useChartsTheme, useTimeZone } from '@perses-dev/components';\nimport { use, EChartsCoreOption } from 'echarts/core';\nimport { HeatmapChart as EChartsHeatmapChart } from 'echarts/charts';\nimport { useTheme } from '@mui/material';\nimport { getFormattedHeatmapAxisLabel } from '../utils';\nimport { generateTooltipHTML } from './HeatMapTooltip';\n\nuse([EChartsHeatmapChart]);\n\n// The default coloring is a blue->yellow->red gradient\nconst DEFAULT_VISUAL_MAP_COLORS = [\n  '#313695',\n  '#4575b4',\n  '#74add1',\n  '#abd9e9',\n  '#e0f3f8',\n  '#ffffbf',\n  '#fee090',\n  '#fdae61',\n  '#f46d43',\n  '#d73027',\n  '#a50026',\n];\n\nexport type HeatMapData = [number, number, number | undefined]; // [x, y, value]\n\nexport interface HeatMapDataItem {\n  value: HeatMapData;\n  label: string;\n  itemStyle?: {\n    color?: string;\n    borderColor?: string;\n    borderWidth?: number;\n  };\n}\n\nexport interface HeatMapChartProps {\n  width: number;\n  height: number;\n  data: HeatMapDataItem[];\n  xAxisCategories: number[];\n  yAxisCategories: string[];\n  yAxisFormat?: FormatOptions;\n  countFormat?: FormatOptions;\n  countMin?: number;\n  countMax?: number;\n  timeScale?: TimeScale;\n  showVisualMap?: boolean;\n  // TODO: exponential?: boolean;\n}\n\nexport function HeatMapChart({\n  width,\n  height,\n  data,\n  xAxisCategories,\n  yAxisCategories,\n  yAxisFormat,\n  countFormat,\n  countMin,\n  countMax,\n  timeScale,\n  showVisualMap,\n}: HeatMapChartProps): ReactElement | null {\n  const chartsTheme = useChartsTheme();\n  const theme = useTheme();\n  const { timeZone } = useTimeZone();\n\n  const option: EChartsCoreOption = useMemo(() => {\n    return {\n      tooltip: {\n        appendToBody: true,\n        formatter: (params: { data: HeatMapDataItem; marker: string }) => {\n          return generateTooltipHTML({\n            data: params.data.value,\n            label: params.data.label,\n            marker: params.marker,\n            xAxisCategories,\n            yAxisCategories,\n            theme,\n            yAxisFormat: yAxisFormat,\n            countFormat: countFormat,\n          });\n        },\n      },\n      xAxis: {\n        type: 'category',\n        data: xAxisCategories,\n        axisLabel: {\n          hideOverlap: true,\n          formatter: getFormattedHeatmapAxisLabel(timeScale?.rangeMs ?? 0, timeZone),\n        },\n      },\n      yAxis: getFormattedAxis(\n        {\n          type: 'category',\n          data: yAxisCategories,\n        },\n        yAxisFormat\n      ),\n      visualMap: {\n        show: showVisualMap ?? false,\n        type: 'continuous',\n        min: countMin,\n        max: countMax,\n        realtime: false,\n        itemHeight: height - 30,\n        itemWidth: 10,\n        orient: 'vertical',\n        left: 'right',\n        top: 'center',\n        inRange: {\n          color: DEFAULT_VISUAL_MAP_COLORS,\n        },\n        textStyle: {\n          color: theme.palette.text.primary,\n          textBorderColor: theme.palette.background.default,\n          textBorderWidth: 5,\n        },\n      },\n      series: [\n        {\n          name: 'Gaussian',\n          type: 'heatmap',\n          data: data,\n          emphasis: {\n            itemStyle: {\n              borderColor: '#333',\n              borderWidth: 1,\n            },\n          },\n          progressive: 1000,\n          animation: false,\n        },\n      ],\n    };\n  }, [\n    xAxisCategories,\n    timeScale?.rangeMs,\n    timeZone,\n    yAxisCategories,\n    yAxisFormat,\n    showVisualMap,\n    countMin,\n    countMax,\n    height,\n    theme,\n    data,\n    countFormat,\n  ]);\n\n  const chart = useMemo(\n    () => (\n      <EChart\n        sx={{\n          width: width,\n          height: height,\n          padding: `${chartsTheme.container.padding.default}px`,\n        }}\n        option={option}\n        theme={chartsTheme.echartsTheme}\n      />\n    ),\n    [chartsTheme.container.padding.default, chartsTheme.echartsTheme, height, option, width]\n  );\n\n  return <>{chart}</>;\n}\n"],"names":["useMemo","EChart","getFormattedAxis","useChartsTheme","useTimeZone","use","HeatmapChart","EChartsHeatmapChart","useTheme","getFormattedHeatmapAxisLabel","generateTooltipHTML","DEFAULT_VISUAL_MAP_COLORS","HeatMapChart","width","height","data","xAxisCategories","yAxisCategories","yAxisFormat","countFormat","countMin","countMax","timeScale","showVisualMap","chartsTheme","theme","timeZone","option","tooltip","appendToBody","formatter","params","value","label","marker","xAxis","type","axisLabel","hideOverlap","rangeMs","yAxis","visualMap","show","min","max","realtime","itemHeight","itemWidth","orient","left","top","inRange","color","textStyle","palette","text","primary","textBorderColor","background","default","textBorderWidth","series","name","emphasis","itemStyle","borderColor","borderWidth","progressive","animation","chart","sx","padding","container","echartsTheme"],"mappings":"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"}