{"version":3,"sources":["../../../src/components/HeatMapTooltip.ts"],"sourcesContent":["// Copyright 2024 The Perses Authors\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css, Theme } from '@mui/material';\nimport { getDateAndTime } from '@perses-dev/components';\nimport { FormatOptions, formatValue } from '@perses-dev/core';\nimport { HeatMapData } from './HeatMapChart';\n\ninterface CustomTooltipProps {\n  data: HeatMapData;\n  label: string;\n  marker: string;\n  xAxisCategories: number[];\n  yAxisCategories: string[];\n  theme: Theme;\n  yAxisFormat?: FormatOptions;\n  countFormat?: FormatOptions;\n}\n\nexport function generateTooltipHTML({\n  data,\n  label,\n  marker,\n  xAxisCategories,\n  yAxisCategories,\n  theme,\n  yAxisFormat,\n  countFormat,\n}: CustomTooltipProps): string {\n  const [x, y] = data;\n  const xAxisLabel = xAxisCategories[x];\n\n  const { formattedDate, formattedTime } = getDateAndTime(xAxisLabel);\n\n  const tooltipHeader = css`\n    border-bottom: 1px solid ${theme.palette.grey[500]};\n    padding-bottom: 8px;\n  `;\n\n  const tooltipContentStyles = css`\n    display: flex;\n    justify-content: space-between;\n    padding-top: 8px;\n  `;\n\n  const labelStyles = css`\n    margin-right: 16px;\n  `;\n\n  const lowerBound = parseFloat(yAxisCategories[y]!);\n  const upperBound = yAxisCategories[y + 1]\n    ? parseFloat(yAxisCategories[y + 1]!)\n    : parseFloat(yAxisCategories[y]!) + parseFloat(yAxisCategories[y]!) - parseFloat(yAxisCategories[y - 1]!); // Top cell, upper bound need to be calculated from previous cell\n\n  return `\n    <div>\n      <div style=\"${tooltipHeader.styles}\">${formattedDate} ${formattedTime}</div>\n      <div style=\"${tooltipContentStyles.styles}\">\n        <div style=\"${labelStyles.styles}\">\n          ${marker}\n          <strong>${formatValue(lowerBound, yAxisFormat)} - ${formatValue(upperBound, yAxisFormat)}</strong>\n        </div>\n        <div>\n          ${formatValue(parseFloat(label), countFormat)}\n        </div>\n      </div>\n    </div>\n  `;\n}\n"],"names":["css","getDateAndTime","formatValue","generateTooltipHTML","data","label","marker","xAxisCategories","yAxisCategories","theme","yAxisFormat","countFormat","x","y","xAxisLabel","formattedDate","formattedTime","tooltipHeader","palette","grey","tooltipContentStyles","labelStyles","lowerBound","parseFloat","upperBound","styles"],"mappings":"AAAA,oCAAoC;AACpC,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,6CAA6C;AAC7C,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AAEjC,SAASA,GAAG,QAAe,gBAAgB;AAC3C,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAAwBC,WAAW,QAAQ,mBAAmB;AAc9D,OAAO,SAASC,oBAAoB,EAClCC,IAAI,EACJC,KAAK,EACLC,MAAM,EACNC,eAAe,EACfC,eAAe,EACfC,KAAK,EACLC,WAAW,EACXC,WAAW,EACQ;IACnB,MAAM,CAACC,GAAGC,EAAE,GAAGT;IACf,MAAMU,aAAaP,eAAe,CAACK,EAAE;IAErC,MAAM,EAAEG,aAAa,EAAEC,aAAa,EAAE,GAAGf,eAAea;IAExD,MAAMG,gBAAgBjB,GAAG,CAAC;6BACC,EAAES,MAAMS,OAAO,CAACC,IAAI,CAAC,IAAI,CAAC;;EAErD,CAAC;IAED,MAAMC,uBAAuBpB,GAAG,CAAC;;;;EAIjC,CAAC;IAED,MAAMqB,cAAcrB,GAAG,CAAC;;EAExB,CAAC;IAED,MAAMsB,aAAaC,WAAWf,eAAe,CAACK,EAAE;IAChD,MAAMW,aAAahB,eAAe,CAACK,IAAI,EAAE,GACrCU,WAAWf,eAAe,CAACK,IAAI,EAAE,IACjCU,WAAWf,eAAe,CAACK,EAAE,IAAKU,WAAWf,eAAe,CAACK,EAAE,IAAKU,WAAWf,eAAe,CAACK,IAAI,EAAE,GAAI,iEAAiE;IAE9K,OAAO,CAAC;;kBAEQ,EAAEI,cAAcQ,MAAM,CAAC,EAAE,EAAEV,cAAc,CAAC,EAAEC,cAAc;kBAC1D,EAAEI,qBAAqBK,MAAM,CAAC;oBAC5B,EAAEJ,YAAYI,MAAM,CAAC;UAC/B,EAAEnB,OAAO;kBACD,EAAEJ,YAAYoB,YAAYZ,aAAa,GAAG,EAAER,YAAYsB,YAAYd,aAAa;;;UAGzF,EAAER,YAAYqB,WAAWlB,QAAQM,aAAa;;;;EAItD,CAAC;AACH"}