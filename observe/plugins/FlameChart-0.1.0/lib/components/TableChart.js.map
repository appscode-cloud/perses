{"version":3,"sources":["../../../src/components/TableChart.tsx"],"sourcesContent":["// Copyright 2025 The Perses Authors\n// Licensed under the Apache License |  Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing |  software\n// distributed under the License is distributed on an \"AS IS\" BASIS |\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND |  either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { ReactElement, useMemo, useState } from 'react';\nimport { Stack, useTheme, Link } from '@mui/material';\nimport { ProfileData } from '@perses-dev/core';\nimport { Table, TableColumnConfig } from '@perses-dev/components';\nimport { SortingState } from '@tanstack/react-table';\nimport { tableRecursionJson } from '../utils/data-transform';\nimport { TableChartSample } from '../utils/data-model';\nimport { formatItemValue } from '../utils/format';\nimport { SearchBar } from './SearchBar';\n\nconst LARGE_PANEL_TRESHOLD = 600; // heigth treshold to switch to large panel mode\nconst PADDING_TOP = 8;\nconst SCROLL_BAR_WIDTH = 15;\nconst SEARCH_BAR_HEIGHT = 50;\n\nexport interface TableChartProps {\n  width: number;\n  height: number;\n  data: ProfileData;\n  searchValue: string;\n  onSearchValueChange: (value: string) => void;\n  onSelectedIdChange: (id: number) => void;\n}\n\nexport function TableChart(props: TableChartProps): ReactElement {\n  const { width, height, data, searchValue, onSearchValueChange, onSelectedIdChange } = props;\n\n  const theme = useTheme();\n\n  const availableHeight = height;\n  const availableWidth = width - 10;\n\n  const tableData: TableChartSample[] = useMemo(() => {\n    return tableRecursionJson(data.profile.stackTrace, searchValue);\n  }, [data, searchValue]);\n\n  const columns: Array<TableColumnConfig<unknown>> = useMemo(() => {\n    const unit = data.metadata?.units || '';\n\n    const columnSettings: Array<TableColumnConfig<unknown>> = [\n      {\n        accessorKey: 'name',\n        header: 'Name',\n        headerDescription: 'Function name',\n        align: 'left',\n        enableSorting: true,\n        width: 0.5 * availableWidth,\n        cell: (ctx) => {\n          const cellValue = ctx.getValue();\n          return (\n            <Link\n              href=\"#\"\n              underline=\"hover\"\n              onClick={(e) => {\n                e.preventDefault();\n                const currentSample = ctx.row.original as TableChartSample;\n                onSelectedIdChange(currentSample.id); // focus on this item in the flame graph\n                onSearchValueChange(currentSample.name);\n              }}\n            >\n              {cellValue}\n            </Link>\n          );\n        },\n        cellDescription: () => '',\n      },\n      {\n        accessorKey: 'self',\n        header: 'Self',\n        headerDescription: 'Function self samples',\n        align: 'right',\n        enableSorting: true,\n        width: 0.25 * availableWidth - SCROLL_BAR_WIDTH,\n        cell: (ctx) => {\n          const cellValue = ctx.getValue();\n          return formatItemValue(unit, cellValue);\n        },\n      },\n      {\n        accessorKey: 'total',\n        header: 'Total',\n        headerDescription: 'Function total samples',\n        align: 'right',\n        enableSorting: true,\n        width: 0.25 * availableWidth,\n        cell: (ctx) => {\n          const cellValue = ctx.getValue();\n          return formatItemValue(unit, cellValue);\n        },\n      },\n    ];\n\n    return columnSettings;\n  }, [data.metadata?.units, availableWidth, onSearchValueChange, onSelectedIdChange]);\n\n  const [sorting, setSorting] = useState<SortingState>([{ id: 'total', desc: true }]);\n\n  return (\n    <Stack\n      width={availableWidth}\n      height={availableHeight}\n      gap={1}\n      sx={{\n        '& .MuiTable-root': {\n          borderCollapse: 'collapse',\n        },\n        '& .MuiTableCell-root': {\n          borderBottom: `1px solid ${theme.palette.divider}`,\n          borderRight: `1px solid ${theme.palette.divider}`,\n          '&:last-child': {\n            borderRight: 'none',\n          },\n        },\n      }}\n    >\n      <SearchBar searchValue={searchValue} onSearchValueChange={onSearchValueChange} />\n      <Table\n        data={tableData}\n        columns={columns}\n        height={availableHeight - PADDING_TOP - SEARCH_BAR_HEIGHT}\n        width={availableWidth}\n        density={availableHeight < LARGE_PANEL_TRESHOLD ? 'compact' : 'standard'}\n        defaultColumnWidth=\"auto\"\n        defaultColumnHeight=\"auto\"\n        sorting={sorting}\n        onSortingChange={setSorting}\n      />\n    </Stack>\n  );\n}\n"],"names":["useMemo","useState","Stack","useTheme","Link","Table","tableRecursionJson","formatItemValue","SearchBar","LARGE_PANEL_TRESHOLD","PADDING_TOP","SCROLL_BAR_WIDTH","SEARCH_BAR_HEIGHT","TableChart","props","width","height","data","searchValue","onSearchValueChange","onSelectedIdChange","theme","availableHeight","availableWidth","tableData","profile","stackTrace","columns","unit","metadata","units","columnSettings","accessorKey","header","headerDescription","align","enableSorting","cell","ctx","cellValue","getValue","href","underline","onClick","e","preventDefault","currentSample","row","original","id","name","cellDescription","sorting","setSorting","desc","gap","sx","borderCollapse","borderBottom","palette","divider","borderRight","density","defaultColumnWidth","defaultColumnHeight","onSortingChange"],"mappings":"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"}