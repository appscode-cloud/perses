{"version":3,"sources":["../../../src/components/Settings.tsx"],"sourcesContent":["// Copyright 2025 The Perses Authors\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { ReactElement, useState, useMemo } from 'react';\nimport RefreshIcon from 'mdi-material-ui/Refresh';\nimport PaletteIcon from 'mdi-material-ui/Palette';\nimport { Stack, Button, useTheme, MenuItem, Menu, Fade } from '@mui/material';\nimport { ToolbarIconButton, InfoTooltip } from '@perses-dev/components';\nimport { TOOLTIP_TEXT } from '../utils/ui-text';\nimport { FlameChartOptions } from '../flame-chart-model';\n\nexport interface SettingsProps {\n  value: FlameChartOptions;\n  selectedId: number;\n  onChangePalette: (palette: 'package-name' | 'value') => void;\n  onSelectedIdChange: (newId: number) => void;\n  onDisplayChange: (value: 'table' | 'flame-graph' | 'both') => void;\n}\n\nexport function Settings(props: SettingsProps): ReactElement {\n  const { value, selectedId, onSelectedIdChange, onChangePalette, onDisplayChange } = props;\n  const theme = useTheme();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n\n  const customButtonStyle = {\n    fontSize: '12px',\n    padding: '2px 6px',\n    minWidth: 'auto',\n  };\n\n  const handleChangeColorShemeClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleByPackageNameClick = () => {\n    onChangePalette('package-name');\n    handleClose();\n  };\n\n  const handleByValueClick = () => {\n    onChangePalette('value');\n    handleClose();\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const isTableSelected = () => selectedView === 'table';\n  const isFlameGraphSelected = () => selectedView === 'flame-graph';\n  const isBothSelected = () => selectedView === 'both';\n\n  // Update selected view based on the value of showTable and showFlameGraph\n  const selectedView: 'table' | 'flame-graph' | 'both' | 'none' = useMemo(() => {\n    if (!value.showTable && !value.showFlameGraph) {\n      return 'none';\n    } else if (value.showTable && value.showFlameGraph) {\n      return 'both';\n    } else if (value.showTable) {\n      return 'table';\n    } else {\n      return 'flame-graph';\n    }\n  }, [value.showTable, value.showFlameGraph]);\n\n  return (\n    <Stack spacing=\"10px\" direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n      {selectedId !== 0 && (\n        <InfoTooltip description={TOOLTIP_TEXT.resetFlameGraph}>\n          <ToolbarIconButton\n            aria-label={TOOLTIP_TEXT.resetFlameGraph}\n            onClick={() => onSelectedIdChange(0)}\n            color=\"primary\"\n          >\n            <RefreshIcon fontSize=\"small\" />\n          </ToolbarIconButton>\n        </InfoTooltip>\n      )}\n      <Stack>\n        <InfoTooltip description={TOOLTIP_TEXT.changeColorSheme}>\n          <ToolbarIconButton\n            id=\"change-color-sheme-button\"\n            aria-label={TOOLTIP_TEXT.changeColorSheme}\n            aria-controls={open ? 'change-color-sheme-menu' : undefined}\n            aria-haspopup=\"true\"\n            aria-expanded={open ? 'true' : undefined}\n            onClick={handleChangeColorShemeClick}\n            color=\"primary\"\n          >\n            <PaletteIcon fontSize=\"small\" />\n          </ToolbarIconButton>\n        </InfoTooltip>\n        <Menu\n          id=\"change-color-sheme-menu\"\n          slotProps={{\n            list: { 'aria-labelledby': 'change-color-sheme-button' },\n          }}\n          anchorEl={anchorEl}\n          open={open}\n          onClose={handleClose}\n          slots={{ transition: Fade }}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n          sx={{\n            mt: 1,\n            '& .MuiPaper-root': {\n              backgroundColor: theme.palette.background.paper,\n              padding: '0 5px',\n            },\n            '& .MuiMenuItem-root:hover': {\n              backgroundColor: theme.palette.action.hover,\n            },\n          }}\n        >\n          <MenuItem onClick={handleByPackageNameClick} selected={value.palette === 'package-name'}>\n            By package name\n          </MenuItem>\n          <MenuItem onClick={handleByValueClick} selected={value.palette === 'value'}>\n            By value\n          </MenuItem>\n        </Menu>\n      </Stack>\n      <Stack\n        direction=\"row\"\n        sx={{\n          border: `1px solid ${theme.palette.primary.main}`,\n          borderRadius: `${theme.shape.borderRadius}px`,\n          padding: '2px',\n        }}\n      >\n        <InfoTooltip description={TOOLTIP_TEXT.showTable}>\n          <Button\n            variant={isTableSelected() ? 'contained' : 'text'}\n            color=\"primary\"\n            size=\"small\"\n            onClick={() => onDisplayChange('table')}\n            sx={customButtonStyle}\n          >\n            Table\n          </Button>\n        </InfoTooltip>\n        <InfoTooltip description={TOOLTIP_TEXT.showFlameGraph}>\n          <Button\n            variant={isFlameGraphSelected() ? 'contained' : 'text'}\n            color=\"primary\"\n            size=\"small\"\n            onClick={() => onDisplayChange('flame-graph')}\n            sx={customButtonStyle}\n          >\n            Flame Graph\n          </Button>\n        </InfoTooltip>\n        <InfoTooltip description={TOOLTIP_TEXT.showBoth}>\n          <Button\n            variant={isBothSelected() ? 'contained' : 'text'}\n            color=\"primary\"\n            size=\"small\"\n            onClick={() => onDisplayChange('both')}\n            sx={customButtonStyle}\n          >\n            Both\n          </Button>\n        </InfoTooltip>\n      </Stack>\n    </Stack>\n  );\n}\n"],"names":["useState","useMemo","RefreshIcon","PaletteIcon","Stack","Button","useTheme","MenuItem","Menu","Fade","ToolbarIconButton","InfoTooltip","TOOLTIP_TEXT","Settings","props","value","selectedId","onSelectedIdChange","onChangePalette","onDisplayChange","theme","anchorEl","setAnchorEl","open","Boolean","customButtonStyle","fontSize","padding","minWidth","handleChangeColorShemeClick","event","currentTarget","handleByPackageNameClick","handleClose","handleByValueClick","isTableSelected","selectedView","isFlameGraphSelected","isBothSelected","showTable","showFlameGraph","spacing","direction","justifyContent","alignItems","description","resetFlameGraph","aria-label","onClick","color","changeColorSheme","id","aria-controls","undefined","aria-haspopup","aria-expanded","slotProps","list","onClose","slots","transition","anchorOrigin","vertical","horizontal","transformOrigin","sx","mt","backgroundColor","palette","background","paper","action","hover","selected","border","primary","main","borderRadius","shape","variant","size","showBoth"],"mappings":"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"}