{"version":3,"sources":["../../../src/model/api-types.ts"],"sourcesContent":["// Copyright 2025 The Perses Authors\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { DurationString } from '@perses-dev/core';\nimport ASTNode from '../components/promql/ast';\n\n// Just reuse dashboard model's type and re-export\nexport type { DurationString };\n\nexport interface SuccessResponse<T> {\n  status: 'success';\n  data: T;\n  rawResponse?: Response;\n  warnings?: string[];\n}\n\nexport interface ErrorResponse<T> {\n  status: 'error';\n  data?: T;\n  errorType: string;\n  error: string;\n}\n\nexport type ApiResponse<T> = SuccessResponse<T> | ErrorResponse<T>;\n\nexport type DurationSeconds = number;\n\nexport type UnixTimestampSeconds = number;\n\nexport type ValueTuple = [unixTimeSeconds: UnixTimestampSeconds, sampleValue: string];\n\nexport type BucketTuple = [bucket: number, upperBound: string, lowerBound: string, count: string];\n\nexport type HistogramValue = { count: number; sum: string; buckets?: BucketTuple[] };\n\nexport type HistogramTuple = [unixTimeSeconds: UnixTimestampSeconds, value: HistogramValue];\n\nexport type Metric = Record<string, string>;\n\nexport interface VectorData {\n  resultType: 'vector';\n  result: Array<{\n    metric: Metric;\n    value: ValueTuple;\n    histogram?: HistogramTuple;\n  }>;\n}\n\nexport interface MatrixData {\n  resultType: 'matrix';\n  result: Array<{\n    metric: Metric;\n    values: ValueTuple[];\n    histograms?: HistogramTuple[];\n  }>;\n}\n\nexport interface ScalarData {\n  resultType: 'scalar';\n  result: ValueTuple;\n}\n\nexport interface StringData {\n  resultType: 'string';\n  result: ValueTuple;\n}\n\nexport interface InstantQueryRequestParameters {\n  query: string;\n  time?: UnixTimestampSeconds;\n  timeout?: DurationString;\n}\n\nexport type InstantQueryResultType = MatrixData | VectorData | ScalarData | StringData;\n\n// Ref https://prometheus.io/docs/prometheus/latest/querying/api/#instant-queries\nexport type InstantQueryResponse = ApiResponse<InstantQueryResultType>;\n\nexport type MonitoredInstantQueryResponse = InstantQueryResponse & {\n  responseTime: number;\n};\n\nexport interface RangeQueryRequestParameters {\n  query: string;\n  start: UnixTimestampSeconds;\n  end: UnixTimestampSeconds;\n  step: DurationSeconds;\n  timeout?: DurationString;\n}\n\nexport type RangeQueryResponse = ApiResponse<MatrixData>;\n\nexport interface SeriesRequestParameters {\n  'match[]': string[];\n  start?: UnixTimestampSeconds;\n  end?: UnixTimestampSeconds;\n  limit?: number;\n}\n\nexport type SeriesResponse = ApiResponse<Metric[]>;\n\nexport interface LabelNamesRequestParameters {\n  start?: UnixTimestampSeconds;\n  end?: UnixTimestampSeconds;\n  'match[]'?: string[];\n  limit?: number;\n}\n\nexport type LabelNamesResponse = ApiResponse<string[]>;\n\nexport interface LabelValuesRequestParameters {\n  labelName: string;\n  start?: UnixTimestampSeconds;\n  end?: UnixTimestampSeconds;\n  'match[]'?: string[];\n  limit?: number;\n}\n\nexport type LabelValuesResponse = ApiResponse<string[]>;\n\nexport interface MetricMetadata {\n  type: string;\n  help: string;\n  unit?: string;\n}\n\nexport interface MetricMetadataRequestParameters {\n  limit?: number;\n  metric?: string;\n}\n\nexport type MetricMetadataResponse = ApiResponse<Record<string, MetricMetadata[]>>;\n\n// ref: https://prometheus.io/docs/prometheus/3.0/querying/api/#parsing-a-promql-expressions-into-a-abstract-syntax-tree-ast\nexport interface ParseQueryRequestParameters {\n  query: string;\n}\n\nexport type ParseQueryResponse = ApiResponse<ASTNode>;\n"],"names":[],"mappings":"AAAA,oCAAoC;AACpC,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,6CAA6C;AAC7C,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AAyIjC,WAAsD"}