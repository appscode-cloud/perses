{"version":3,"sources":["../../../src/utils/data-transform.ts"],"sourcesContent":["// Copyright 2023 The Perses Authors\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type { YAXisComponentOption } from 'echarts';\nimport { LineSeriesOption, BarSeriesOption } from 'echarts/charts';\nimport {\n  StepOptions,\n  TimeScale,\n  TimeSeries,\n  TimeSeriesValueTuple,\n  getCommonTimeScale,\n  TimeSeriesData,\n} from '@perses-dev/core';\nimport {\n  OPTIMIZED_MODE_SERIES_LIMIT,\n  LegacyTimeSeries,\n  EChartsDataFormat,\n  EChartsValues,\n  TimeSeriesOption,\n} from '@perses-dev/components';\nimport { useTimeSeriesQueries, PanelData } from '@perses-dev/plugin-system';\nimport {\n  DEFAULT_AREA_OPACITY,\n  DEFAULT_CONNECT_NULLS,\n  DEFAULT_LINE_WIDTH,\n  DEFAULT_POINT_RADIUS,\n  DEFAULT_Y_AXIS,\n  POSITIVE_MIN_VALUE_MULTIPLIER,\n  NEGATIVE_MIN_VALUE_MULTIPLIER,\n  TimeSeriesChartVisualOptions,\n  TimeSeriesChartYAxisOptions,\n} from '../time-series-chart-model';\n\nexport type RunningQueriesState = ReturnType<typeof useTimeSeriesQueries>;\n\nexport const EMPTY_GRAPH_DATA: EChartsDataFormat = {\n  timeSeries: [],\n  xAxis: [],\n  legendItems: [],\n};\n\nexport const HIDE_DATAPOINTS_LIMIT = 70;\n\nexport const BLUR_FADEOUT_OPACITY = 0.5;\n\n/**\n * Given a list of running queries, calculates a common time scale for use on\n * the x axis (i.e. start/end dates and a step that is divisible into all of\n * the queries' steps).\n */\nexport function getCommonTimeScaleForQueries(queries: Array<PanelData<TimeSeriesData>>): TimeScale | undefined {\n  const seriesData = queries.map((query) => query.data);\n  return getCommonTimeScale(seriesData);\n}\n\n/**\n * [DEPRECATED] Gets ECharts line series option properties for legacy LineChart\n */\nexport function getLineSeries(\n  id: string,\n  formattedName: string,\n  data: LegacyTimeSeries['data'],\n  visual: TimeSeriesChartVisualOptions,\n  paletteColor?: string\n): LegacyTimeSeries {\n  const lineWidth = visual.lineWidth ?? DEFAULT_LINE_WIDTH;\n  const pointRadius = visual.pointRadius ?? DEFAULT_POINT_RADIUS;\n\n  // Shows datapoint symbols when selected time range is roughly 15 minutes or less\n  let showPoints = data !== undefined && data.length <= HIDE_DATAPOINTS_LIMIT;\n  // Allows overriding default behavior and opt-in to always show all symbols (can hurt performance)\n  if (visual.showPoints === 'always') {\n    showPoints = true;\n  }\n\n  return {\n    type: 'line',\n    id: id,\n    name: formattedName,\n    data: data,\n    connectNulls: visual.connectNulls ?? DEFAULT_CONNECT_NULLS,\n    color: paletteColor,\n    stack: visual.stack === 'all' ? visual.stack : undefined,\n    sampling: 'lttb',\n    progressiveThreshold: OPTIMIZED_MODE_SERIES_LIMIT, // https://echarts.apache.org/en/option.html#series-lines.progressiveThreshold\n    showSymbol: showPoints,\n    showAllSymbol: true,\n    symbolSize: pointRadius,\n    lineStyle: {\n      width: lineWidth,\n      opacity: 0.8,\n    },\n    areaStyle: {\n      opacity: visual.areaOpacity ?? DEFAULT_AREA_OPACITY,\n    },\n    // https://echarts.apache.org/en/option.html#series-line.emphasis\n    emphasis: {\n      focus: 'series',\n      disabled: visual.areaOpacity !== undefined && visual.areaOpacity > 0, // prevents flicker when moving cursor between shaded regions\n      lineStyle: {\n        width: lineWidth + 1.5,\n        opacity: 1,\n      },\n    },\n    blur: {\n      lineStyle: {\n        width: lineWidth,\n        opacity: BLUR_FADEOUT_OPACITY,\n      },\n    },\n  };\n}\n\n/**\n * Gets ECharts line series option properties for recommended TimeChart\n */\nexport function getTimeSeries(\n  id: string,\n  datasetIndex: number,\n  formattedName: string,\n  visual: TimeSeriesChartVisualOptions,\n  timeScale: TimeScale,\n  paletteColor: string\n): TimeSeriesOption {\n  const lineWidth = visual.lineWidth ?? DEFAULT_LINE_WIDTH;\n  const pointRadius = visual.pointRadius ?? DEFAULT_POINT_RADIUS;\n\n  // Shows datapoint symbols when selected time range is roughly 15 minutes or less\n  const minuteMs = 60000;\n  let showPoints = timeScale.rangeMs <= minuteMs * 15;\n  // Allows overriding default behavior and opt-in to always show all symbols (can hurt performance)\n  if (visual.showPoints === 'always') {\n    showPoints = true;\n  }\n\n  if (visual.display === 'bar') {\n    const series: BarSeriesOption = {\n      type: 'bar',\n      id: id,\n      datasetIndex,\n      name: formattedName,\n      color: paletteColor,\n      stack: visual.stack === 'all' ? visual.stack : undefined,\n      label: {\n        show: false,\n      },\n    };\n    return series;\n  }\n\n  const series: LineSeriesOption = {\n    type: 'line',\n    id: id,\n    datasetIndex,\n    name: formattedName,\n    connectNulls: visual.connectNulls ?? DEFAULT_CONNECT_NULLS,\n    color: paletteColor,\n    stack: visual.stack === 'all' ? visual.stack : undefined,\n    sampling: 'lttb',\n    progressiveThreshold: OPTIMIZED_MODE_SERIES_LIMIT, // https://echarts.apache.org/en/option.html#series-lines.progressiveThreshold\n    showSymbol: showPoints,\n    showAllSymbol: true,\n    symbolSize: pointRadius,\n    lineStyle: {\n      width: lineWidth,\n      opacity: 0.95,\n    },\n    areaStyle: {\n      opacity: visual.areaOpacity ?? DEFAULT_AREA_OPACITY,\n    },\n    // https://echarts.apache.org/en/option.html#series-line.emphasis\n    emphasis: {\n      focus: 'series',\n      disabled: visual.areaOpacity !== undefined && visual.areaOpacity > 0, // prevents flicker when moving cursor between shaded regions\n      lineStyle: {\n        width: lineWidth + 1,\n        opacity: 1,\n      },\n    },\n    selectedMode: 'single',\n    select: {\n      itemStyle: {\n        borderColor: paletteColor,\n        borderWidth: pointRadius + 0.5,\n      },\n    },\n    blur: {\n      lineStyle: {\n        width: lineWidth,\n        opacity: BLUR_FADEOUT_OPACITY,\n      },\n    },\n  };\n  return series;\n}\n\n/**\n * Gets threshold-specific line series styles\n * markLine cannot be used since it does not update yAxis max / min\n * and threshold data needs to show in the tooltip\n */\nexport function getThresholdSeries(name: string, threshold: StepOptions, seriesIndex: number): LineSeriesOption {\n  return {\n    type: 'line',\n    name: name,\n    id: name,\n    datasetId: name,\n    datasetIndex: seriesIndex,\n    color: threshold.color,\n    label: {\n      show: false,\n    },\n    lineStyle: {\n      type: 'dashed',\n      width: 2,\n    },\n    emphasis: {\n      focus: 'series',\n      lineStyle: {\n        width: 2.5,\n      },\n    },\n    blur: {\n      lineStyle: {\n        opacity: BLUR_FADEOUT_OPACITY,\n      },\n    },\n  };\n}\n\n/**\n * Converts percent threshold into absolute step value\n * If max is undefined, use the max value from time series data as default\n */\nexport function convertPercentThreshold(\n  percent: number,\n  data: LegacyTimeSeries[] | TimeSeries[],\n  max?: number,\n  min?: number\n): number {\n  const percentDecimal = percent / 100;\n  const adjustedMax = max ?? findMax(data);\n  const adjustedMin = min ?? 0;\n  const total = adjustedMax - adjustedMin;\n  return percentDecimal * total + adjustedMin;\n}\n\nfunction findMax(data: LegacyTimeSeries[] | TimeSeries[]): number {\n  let max = 0;\n  if (data.length && data[0] !== undefined && (data as TimeSeries[])[0]?.values) {\n    (data as TimeSeries[]).forEach((series) => {\n      series.values.forEach((valueTuple: TimeSeriesValueTuple) => {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const [_, value] = valueTuple;\n        if (typeof value === 'number' && value > max) {\n          max = value;\n        }\n      });\n    });\n  } else {\n    (data as LegacyTimeSeries[]).forEach((series) => {\n      if (series.data !== undefined) {\n        series.data.forEach((value: EChartsValues) => {\n          if (typeof value === 'number' && value > max) {\n            max = value;\n          }\n        });\n      }\n    });\n  }\n  return max;\n}\n\n/**\n * Converts Perses panel yAxis from dashboard spec to ECharts supported yAxis options\n */\nexport function convertPanelYAxis(inputAxis: TimeSeriesChartYAxisOptions = {}): YAXisComponentOption {\n  const yAxis: YAXisComponentOption = {\n    show: true,\n    axisLabel: {\n      show: inputAxis?.show ?? DEFAULT_Y_AXIS.show,\n    },\n    min: inputAxis?.min,\n    max: inputAxis?.max,\n  };\n\n  // Set the y-axis minimum relative to the data\n  if (inputAxis?.min === undefined) {\n    // https://echarts.apache.org/en/option.html#yAxis.min\n    yAxis.min = (value): number => {\n      if (value.min >= 0 && value.min <= 1) {\n        // Helps with PercentDecimal units, or datasets that return 0 or 1 booleans\n        return 0;\n      }\n\n      // Note: We can tweak the MULTIPLIER constants if we want\n      // TODO: Experiment with using a padding that is based on the difference between max value and min value\n      if (value.min > 0) {\n        return roundDown(value.min * POSITIVE_MIN_VALUE_MULTIPLIER);\n      } else {\n        return roundDown(value.min * NEGATIVE_MIN_VALUE_MULTIPLIER);\n      }\n    };\n  }\n\n  return yAxis;\n}\n\n/**\n * Rounds down to nearest number with one significant digit.\n *\n * Examples:\n * 1. 675 --> 600\n * 2. 0.567 --> 0.5\n * 3. -12 --> -20\n */\nexport function roundDown(num: number): number {\n  const magnitude = Math.floor(Math.log10(Math.abs(num)));\n  const firstDigit = Math.floor(num / Math.pow(10, magnitude));\n  return firstDigit * Math.pow(10, magnitude);\n}\n"],"names":["getCommonTimeScale","OPTIMIZED_MODE_SERIES_LIMIT","DEFAULT_AREA_OPACITY","DEFAULT_CONNECT_NULLS","DEFAULT_LINE_WIDTH","DEFAULT_POINT_RADIUS","DEFAULT_Y_AXIS","POSITIVE_MIN_VALUE_MULTIPLIER","NEGATIVE_MIN_VALUE_MULTIPLIER","EMPTY_GRAPH_DATA","timeSeries","xAxis","legendItems","HIDE_DATAPOINTS_LIMIT","BLUR_FADEOUT_OPACITY","getCommonTimeScaleForQueries","queries","seriesData","map","query","data","getLineSeries","id","formattedName","visual","paletteColor","lineWidth","pointRadius","showPoints","undefined","length","type","name","connectNulls","color","stack","sampling","progressiveThreshold","showSymbol","showAllSymbol","symbolSize","lineStyle","width","opacity","areaStyle","areaOpacity","emphasis","focus","disabled","blur","getTimeSeries","datasetIndex","timeScale","minuteMs","rangeMs","display","series","label","show","selectedMode","select","itemStyle","borderColor","borderWidth","getThresholdSeries","threshold","seriesIndex","datasetId","convertPercentThreshold","percent","max","min","percentDecimal","adjustedMax","findMax","adjustedMin","total","values","forEach","valueTuple","_","value","convertPanelYAxis","inputAxis","yAxis","axisLabel","roundDown","num","magnitude","Math","floor","log10","abs","firstDigit","pow"],"mappings":"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"}