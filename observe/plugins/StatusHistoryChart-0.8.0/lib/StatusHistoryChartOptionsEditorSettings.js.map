{"version":3,"sources":["../../src/StatusHistoryChartOptionsEditorSettings.tsx"],"sourcesContent":["// Copyright 2024 The Perses Authors\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { LegendOptionsEditor, LegendOptionsEditorProps } from '@perses-dev/plugin-system';\nimport { produce } from 'immer';\nimport { OptionsEditorGroup, OptionsEditorGrid, OptionsEditorColumn } from '@perses-dev/components';\nimport { Button } from '@mui/material';\nimport { ReactElement } from 'react';\nimport { StatusHistoryChartOptions, StatusHistroyChartEditorProps } from './status-history-model.js';\n\nexport function StatusHistoryChartOptionsEditorSettings(props: StatusHistroyChartEditorProps): ReactElement {\n  const { onChange, value } = props;\n\n  const handleLegendChange: LegendOptionsEditorProps['onChange'] = (newLegend) => {\n    // TODO (sjcobb): fix type, add position, fix glitch\n    onChange(\n      produce(value, (draft: StatusHistoryChartOptions) => {\n        draft.legend = newLegend;\n      })\n    );\n  };\n\n  return (\n    <OptionsEditorGrid>\n      <OptionsEditorColumn>\n        <LegendOptionsEditor showValuesEditor={false} value={value.legend} onChange={handleLegendChange} />\n      </OptionsEditorColumn>\n      <OptionsEditorColumn>\n        <OptionsEditorGroup title=\"Reset Settings\">\n          <Button\n            variant=\"outlined\"\n            color=\"secondary\"\n            onClick={() => {\n              onChange(\n                produce(value, (draft: StatusHistoryChartOptions) => {\n                  // reset button removes all optional panel options\n                  draft.legend = undefined;\n                })\n              );\n            }}\n          >\n            Reset To Defaults\n          </Button>\n        </OptionsEditorGroup>\n      </OptionsEditorColumn>\n    </OptionsEditorGrid>\n  );\n}\n"],"names":["LegendOptionsEditor","produce","OptionsEditorGroup","OptionsEditorGrid","OptionsEditorColumn","Button","StatusHistoryChartOptionsEditorSettings","props","onChange","value","handleLegendChange","newLegend","draft","legend","showValuesEditor","title","variant","color","onClick","undefined"],"mappings":"AAAA,oCAAoC;AACpC,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,6CAA6C;AAC7C,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEjC,SAASA,mBAAmB,QAAkC,4BAA4B;AAC1F,SAASC,OAAO,QAAQ,QAAQ;AAChC,SAASC,kBAAkB,EAAEC,iBAAiB,EAAEC,mBAAmB,QAAQ,yBAAyB;AACpG,SAASC,MAAM,QAAQ,gBAAgB;AAIvC,OAAO,SAASC,wCAAwCC,KAAoC;IAC1F,MAAM,EAAEC,QAAQ,EAAEC,KAAK,EAAE,GAAGF;IAE5B,MAAMG,qBAA2D,CAACC;QAChE,oDAAoD;QACpDH,SACEP,QAAQQ,OAAO,CAACG;YACdA,MAAMC,MAAM,GAAGF;QACjB;IAEJ;IAEA,qBACE,MAACR;;0BACC,KAACC;0BACC,cAAA,KAACJ;oBAAoBc,kBAAkB;oBAAOL,OAAOA,MAAMI,MAAM;oBAAEL,UAAUE;;;0BAE/E,KAACN;0BACC,cAAA,KAACF;oBAAmBa,OAAM;8BACxB,cAAA,KAACV;wBACCW,SAAQ;wBACRC,OAAM;wBACNC,SAAS;4BACPV,SACEP,QAAQQ,OAAO,CAACG;gCACd,kDAAkD;gCAClDA,MAAMC,MAAM,GAAGM;4BACjB;wBAEJ;kCACD;;;;;;AAOX"}